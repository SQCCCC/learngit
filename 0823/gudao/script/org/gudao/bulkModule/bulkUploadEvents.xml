<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
        <simple-method method-name="doUploadProductXlsFile" short-description=""><call-class-method class-name="org.ofbiz.content.layout.LayoutWorker"
            method-name="uploadImageAndParameters" ret-field="formInput">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
            <string value="uploadedFile"/>
        </call-class-method>
        <set field="importFormId" from-field="formInput.formInput.importFormId"/>
        <field-to-request field="importFormId"/>
        <if-empty field="formInput.formInput.importFormId">
            <set field="showMsg" value="Please Choose Bulk Import Type"/>
            <field-to-list list="errorMessageList" field="showMsg"/>
            <field-to-request field="errorMessageList"/>
            <return response-code="error"/>
        </if-empty>
        <if-empty field="formInput.imageFileName">
            <set field="showMsg" value="No file to upload."/>
            <field-to-list list="errorMessageList" field="showMsg"/>
            <field-to-request field="errorMessageList"/>
            <return response-code="error"/>
        </if-empty>
        <set field="csvCtx.uploadedFile" from-field="formInput.imageData"/>
        <set field="csvCtx._uploadedFile_fileName" from-field="formInput.imageFileName"/>
        <set field="csvCtx.importFormId" from-field="formInput.formInput.importFormId"/>
        <call-service service-name="uploadProductXlsFileGudao" in-map-name="csvCtx" include-user-login="true">
            <result-to-field result-name="errorMessageList"/>
        </call-service>
        <if-empty field="errorMessageList">
            <set field="showMsg" value="Uploaded Successful."/>
            <field-to-list list="eventMessageList" field="showMsg"/>
            <field-to-request field="eventMessageList"/>
        </if-empty>
        </simple-method>    <!-- doUploadProductXlsFile -->
        
        <simple-method method-name="doUploadProductUpdateXlsFile" short-description="">
            <call-class-method class-name="org.ofbiz.content.layout.LayoutWorker"
                method-name="uploadImageAndParameters" ret-field="formInput">
                <field field="request" type="javax.servlet.http.HttpServletRequest"/>
                <string value="uploadedFile"/>
            </call-class-method>
            <set field="updateFormId" from-field="formInput.formInput.updateFormId"/>
            <field-to-request field="updateFormId"/>
            <if-empty field="formInput.formInput.updateFormId">
                <set field="showMsg" value="Please Choose Bulk Update Type"/>
                <field-to-list list="errorMessageList" field="showMsg"/>
                <field-to-request field="errorMessageList"/>
                <return response-code="error"/>
            </if-empty>
            <if-empty field="formInput.imageFileName">
                <set field="showMsg" value="No file to upload."/>
                <field-to-list list="errorMessageList" field="showMsg"/>
                <field-to-request field="errorMessageList"/>
                <return response-code="error"/>
            </if-empty>
            <set field="csvCtx.uploadedFile" from-field="formInput.imageData"/>
            <set field="csvCtx._uploadedFile_fileName" from-field="formInput.imageFileName"/>
            <set field="csvCtx.updateFormId" from-field="formInput.formInput.updateFormId"/>
            <call-service service-name="uploadProductXlsFileGudao" in-map-name="csvCtx" include-user-login="true">
                <result-to-field result-name="errorMessageList"/>
            </call-service>
            <if-empty field="errorMessageList">
                <set field="showMsg" value="Uploaded Successful."/>
                <field-to-list list="eventMessageList" field="showMsg"/>
                <field-to-request field="eventMessageList"/>
            </if-empty>
        </simple-method>    <!-- doUploadProductUpdateXlsFile -->
        
        <simple-method method-name="createProductImport" short-description="Create Product Import">
            <make-value value-field="newEntity" entity-name="ProductImportGudao"/>
            <if-empty field="parameters.productId">
                <add-error error-list-name="_error_message_list_">
                    <fail-message message="empty Product ID, check SKU record field in csv file line number ${parameters.fileLineNumber}"/>
                </add-error>
            </if-empty>
            <if-empty field="parameters.fileName">
                <add-error error-list-name="_error_message_list_">
                    <fail-message message="empty FILE_NAME in file line number ${parameters.fileLineNumber}"/>
                </add-error>
            </if-empty>
            <if-empty field="_error_message_list_">
                <set-pk-fields map="parameters" value-field="newEntity"/>
                <set-nonpk-fields map="parameters" value-field="newEntity"/>
                <create-value value-field="newEntity"/>
                <check-errors error-code="error"/>
                <else>
                    <add-error error-list-name="errorMessageList">
                        <fail-message message="ERROR: ${_error_message_list_} on ${parameters.productId}"/>
                    </add-error>
                    <check-errors error-list-name="errorMessageList" error-code="error"/>
                </else>
            </if-empty>
        </simple-method> <!-- createProductImport -->
        
        <simple-method method-name="importMultiProducts" short-description="import Multi Products" use-transaction="false">
            <set field="importFormId" from-field="parameters.importFormId"/>
            <field-to-result result-name="fileName" field="parameters.fileName"/>
            <field-to-result result-name="importFormId" field="parameters.importFormId"/>
            <entity-and list="productImports" entity-name="ProductImportGudao">
                <field-map field-name="fileName" from-field="parameters.fileName"/>
            </entity-and>
            <set field="isError" value="false" type="Boolean"/>
            <set field="successImport" type="BigDecimal" value="0"/>
            
            <if-not-empty field="productImports">
                <iterate entry="productImport" list="productImports">
                    <if-compare operator="not-equals" value="Y" field="productImport.importedStatus">
                        <set field="importNewProduct.importFormId" from-field="productImport.importFormId"/>
                        <if-empty field="importNewProduct.importFormId">
                            <set field="importNewProduct.importFormId" from-field="parameters.importFormId"/>
                        </if-empty>
                        <set field="importNewProduct.productImportId" from-field="productImport.productImportId"/>
                        <call-service service-name="importNewProductFromCsvGudao" in-map-name="importNewProduct" include-user-login="true" break-on-error="false">
                            <result-to-field result-name="errorMessageList"/>
                        </call-service>
                        <!--<log level="error" message="${errorMessageList}"/>-->
                        <if-empty field="errorMessageList">
                            <set field="productImportValue.productImportId" from-field="productImport.productImportId"/>
                            <set field="productImportValue.importedStatus" value="Y"/>
                            <set field="productImportValue.importedDescription" value="Imported Successfully."/>
                            <call-service service-name="updateProductImportGudao" in-map-name="productImportValue"/>
                            <calculate field="successImport">
                                <calcop operator="add" field="successImport">
                                    <number value="1"/>
                                </calcop>
                            </calculate>
                            <else>
                                <set field="productImportValue.productImportId" from-field="productImport.productImportId"/>
                                <set field="productImportValue.importedStatus" value="N"/>
                                <set field="productImportValue.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                                <call-service service-name="updateProductImportGudao" in-map-name="productImportValue" include-user-login="true" break-on-error="false"/>
                                <set field="isError" value="true" type="Boolean"/>
                                <set field="failMessage" value="Importation failed! Problem detected at productImportId [${productImport.productImportId}], please fix and re-import."/>
                                <field-to-list list="allErrorMessageList" field="failMessage"/>
                            </else>
                        </if-empty>
                        <clear-field field="errorMessageList"/>
                    </if-compare>
                </iterate>
            </if-not-empty>
            <set field="importedResult" value="Successfully imported ${successImport} product(s)"/>
            <if-not-empty field="allErrorMessageList">
                <field-to-request field="allErrorMessageList" request-name="errorMessageList"/>
            </if-not-empty>
            <if-compare operator="greater" value="0" field="successImport">
                <field-to-list list="eventMessageList" field="importedResult"/>
                <field-to-request field="eventMessageList"/>
            </if-compare>
        </simple-method>    <!-- importMultiProducts -->
        
        <simple-method method-name="importNewProductFromCsv" short-description="">
            <now-date-to-env field="nowDate"/>
            <set field="importFormId" from-field="parameters.importFormId"/>
            <if-empty field="importFormId">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="Required importFormId [productImportId : ${productImport.productImportId}]"/>
                </add-error>
                <return response-code="error"/>
            </if-empty>
            <entity-one value-field="productImport" entity-name="ProductImportGudao">
                <field-map field-name="productImportId" from-field="parameters.productImportId"/>
            </entity-one>
            <if-compare operator="equals" value="Y" field="productImport.importedStatus">
                <return/>
            </if-compare>
            
            <!-- Check errorNotes == START -->
            <if-not-empty field="productImport.errorNotes">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="${productImport.errorNotes}"/>
                </add-error>
                <return response-code="error"/>
            </if-not-empty>
            <!-- Check errorNotes == END -->
            
            <entity-one value-field="productCheck" entity-name="ProductMaster">
                <field-map field-name="productId" from-field="productImport.productId"/>
            </entity-one>
            
            <if-not-empty field="productCheck">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="This product [${productImport.productId}] already exists. Please use bulk update module"/>
                </add-error>
                <else>
                    <!-- create product - START -->
                    <set field="productCtx.productId" from-field="productImport.productId"/>
                    <set field="productCtx.actualPrice" from-field="productImport.actualPrice" type="BigDecimal"/>
                    <set field="productCtx.backupMinOrderDays" from-field="productImport.backupMinOrderDays"/>
                    <set field="productCtx.backupSupplier" from-field="productImport.backupSupplier"/>
                    <set field="productCtx.backupSupplierEta" from-field="productImport.backupSupplierEta"/>
                    <set field="productCtx.backupSupplierLink" from-field="productImport.backupSupplierLink"/>
                    <set field="productCtx.categoryIdChild" from-field="productImport.categoryIdChild"/>
                    <set field="productCtx.categoryIdParent" from-field="productImport.categoryIdParent"/>
                    <set field="productCtx.chineseName" from-field="productImport.chineseName"/>
                    <set field="productCtx.englishName" from-field="productImport.englishName"/>
                    <set field="productCtx.createdBy" from-field="productImport.createdBy"/>
                    <set field="productCtx.customSku" from-field="productImport.customSku"/>
                    <set field="productCtx.declaredNameCn" from-field="productImport.declaredNameCn"/>
                    <set field="productCtx.declaredNameEn" from-field="productImport.declaredNameEn"/>
                    <set field="productCtx.englishName" from-field="productImport.englishName"/>
                    <set field="productCtx.extraStockingDay" from-field="productImport.extraStockingDay"/>
                    <set field="productCtx.imageLink" from-field="productImport.imageLink"/>
                    <set field="productCtx.listingNotes" from-field="productImport.listingNotes"/>
                    <set field="productCtx.mainMinOrderDays" from-field="productImport.minOrderDays"/>
                    <set field="productCtx.mainSupplier" from-field="productImport.supplier"/>
                    <set field="productCtx.mainSupplierEta" from-field="productImport.eta"/>
                    <set field="productCtx.mainSupplierLink" from-field="productImport.supplierLink"/>
                    <set field="productCtx.motherSku" from-field="productImport.motherSku"/>
                    <set field="productCtx.notes" from-field="productImport.notes"/>
                    <set field="productCtx.ownerGroup" from-field="productImport.ownerGroup"/>
                    <set field="productCtx.pictureReady" from-field="productImport.pictureReady"/>
                    <set field="productCtx.productGroup" from-field="productImport.productGroup"/>
                    <set field="productCtx.productType" from-field="productImport.productType"/>
                    <set field="productCtx.purchaser" from-field="productImport.purchaser"/>
                    <set field="productCtx.sourcingDate" from-field="productImport.sourcingDate"/>
                    <set field="productCtx.statusId" from-field="productImport.statusId"/>
                    <set field="productCtx.weight" from-field="productImport.weight"/>
                    <set field="productCtx.oversea" from-field="productImport.oversea"/>
                    <set field="productCtx.length" from-field="productImport.length"/>
                    <set field="productCtx.width" from-field="productImport.width"/>
                    <set field="productCtx.height" from-field="productImport.height"/>
                    
                    <if-not-empty field="productCtx.productId">
                        <call-service service-name="createProductGudao" in-map-name="productCtx" include-user-login="true" break-on-error="false">
                            <!--<result-to-field result-name="resultProductId" field="productId"/>-->
                        </call-service>
                        
                        <!-- create supplier list = START = -->
                        <entity-one value-field="supplierList" entity-name="SupplierList">
                            <field-map field-name="supplier" from-field="productImport.supplier"/>
                        </entity-one>
                        <if-empty field="supplierList">
                            <make-value value-field="supplierListNew" entity-name="SupplierList"/>
                            <sequenced-id sequence-name="SupplierList" field="supplierListNew.supplierId"/>
                            <set field="supplierListNew.supplier" from-field="productImport.supplier"/>
                            <set field="supplierListNew.holidayStart" from-field="productImport.supplierHolidayStart"/>
                            <set field="supplierListNew.holidayEnd" from-field="productImport.supplierHolidayEnd"/>
                            <create-value value-field="supplierListNew"/>
                        </if-empty>
                        <if-not-empty field="productImport.backupSupplier">
                            <entity-one value-field="backupSupplierList" entity-name="SupplierList">
                                <field-map field-name="supplier" from-field="productImport.backupSupplier"/>
                            </entity-one>
                            <if-empty field="backupSupplierList">
                                <make-value value-field="backupSupplierListNew" entity-name="SupplierList"/>
                                <sequenced-id sequence-name="SupplierList" field="backupSupplierListNew.supplierId"/>
                                <set field="backupSupplierListNew.supplier" from-field="productImport.backupSupplier"/>
                                <set field="backupSupplierListNew.holidayStart" from-field="productImport.backupHolidayStart"/>
                                <set field="backupSupplierListNew.holidayEnd" from-field="productImport.backupHolidayEnd"/>
                                <create-value value-field="backupSupplierListNew"/>
                            </if-empty>
                        </if-not-empty>
                        <!-- create supplier list = END = -->
                        
                        <!-- create product master status - START -->
                        <entity-and list="departmentList" entity-name="PartyRole">
                            <field-map field-name="roleTypeId" value="PLATFORM"/>
                        </entity-and>
                        <iterate entry="department" list="departmentList">
                            <entity-and list="platformList" entity-name="PartyRoleDetailAndPartyDetail">
                                <field-map field-name="partyId" from-field="department.partyId"/>
                                <field-map field-name="parentTypeId" value="PLATFORM"/>
                            </entity-and>
                            <iterate entry="platform" list="platformList">
                                <make-value value-field="productMasterStatus" entity-name="ProductMasterStatus"/>
                                <set field="productMasterStatus.productId" from-field="productCtx.productId"/>
                                <set field="productMasterStatus.department" from-field="department.partyId"/>
                                <set field="productMasterStatus.platform" from-field="platform.roleTypeId"/>
                                <set field="productMasterStatus.statusId" value="新品待上"/>
                                <create-value value-field="productMasterStatus"/>
                                <make-value value-field="productMasterGroup" entity-name="ProductMasterGroup"/>
                                <set field="productMasterGroup.productId" from-field="productCtx.productId"/>
                                <set field="productMasterGroup.department" from-field="department.partyId"/>
                                <set field="productMasterGroup.platform" from-field="platform.roleTypeId"/>
                                <set field="productMasterGroup.productGroup" value="G3"/>
                                <create-value value-field="productMasterGroup"/>
                            </iterate>
                        </iterate>
                        <!-- create product master status - END -->
                        
                        <!--create product master price - START -->
                        <set field="usd" from-field="productImport.priceUsd" type="BigDecimal"/>
                        
                        <if-not-empty field="usd">
                            <set field="usdCtx.productId" from-field="productImport.productId"/>
                            <set field="usdCtx.platform" value="EBAY"/>
                            <set field="usdCtx.type" value="MANUAL"/>
                            <set field="usdCtx.site" value="US"/>
                            <set field="usdCtx.currencyId" value="USD"/>
                            <set field="usdCtx.price" from-field="usd"/>
                            <call-service service-name="createProductPriceGudao" in-map-name="usdCtx" include-user-login="true" break-on-error="false"/>
                        </if-not-empty>
                        <!--create product master price - END -->
                        
                        <!--create product master supplier - START -->
                        <!--<set field="pmSupplierCtx.productId" from-field="productImport.productId"/>
                        <set field="pmSupplierCtx.supplier" from-field="productImport.supplier"/>
                        <set field="pmSupplierCtx.supplierType" from-field="productImport.supplierType"/>
                        <if-empty field="pmSupplierCtx.supplierType">
                            <set field="pmSupplierCtx.supplierType" value="MAIN"/>
                        </if-empty>
                        <set field="pmSupplierCtx.price" from-field="productImport.price" type="BigDecimal"/>
                        <set field="pmSupplierCtx.actualPrice" from-field="productImport.actualPrice" type="BigDecimal"/>
                        <set field="pmSupplierCtx.supplierLink" from-field="productImport.supplierLink"/>
                        <set field="pmSupplierCtx.discountRate" from-field="productImport.discountRate"/>
                        <set field="pmSupplierCtx.eta" from-field="productImport.eta"/>
                        <set field="pmSupplierCtx.priceLastUpdate" from-field="nowDate"/>
                        <call-service service-name="createProductSupplierGudao" in-map-name="pmSupplierCtx" include-user-login="true" break-on-error="false"/>-->
                        <!--create product master supplier - END -->
                        
                        <!--create supplier price - START -->
                        <!-- A - START -->
                        <if-not-empty field="productImport.moQtyA">
                            <make-value value-field="supplierPriceA" entity-name="SupplierPrice"/>
                            <set field="supplierPriceA.productId" from-field="productImport.productId"/>
                            <set field="supplierPriceA.supplier" from-field="productImport.supplier"/>
                            <set field="supplierPriceA.identifier" from-field="productImport.moIdentifierA"/>
                            <set field="supplierPriceA.type" value="MIN_QUANTITY"/>
                            <set field="supplierPriceA.minimumOrderValue" from-field="productImport.moQtyA" type="BigDecimal"/>
                            <set field="supplierPriceA.unitPrice" from-field="productImport.moUnitPriceA" type="BigDecimal"/>
                            <create-value value-field="supplierPriceA"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.moPriceA">
                            <make-value value-field="supplierPriceA" entity-name="SupplierPrice"/>
                            <set field="supplierPriceA.productId" from-field="productImport.productId"/>
                            <set field="supplierPriceA.supplier" from-field="productImport.supplier"/>
                            <set field="supplierPriceA.identifier" from-field="productImport.moIdentifierA"/>
                            <set field="supplierPriceA.type" value="MIN_PRICE"/>
                            <set field="supplierPriceA.minimumOrderValue" from-field="productImport.moQtyA" type="BigDecimal"/>
                            <set field="supplierPriceA.unitPrice" from-field="productImport.moUnitPriceA" type="BigDecimal"/>
                            <create-value value-field="supplierPriceA"/>
                        </if-not-empty>
                        <!-- A - END -->
                        <!-- B - START -->
                        <if-not-empty field="productImport.moQtyB">
                            <make-value value-field="supplierPriceB" entity-name="SupplierPrice"/>
                            <set field="supplierPriceB.productId" from-field="productImport.productId"/>
                            <set field="supplierPriceB.supplier" from-field="productImport.supplier"/>
                            <set field="supplierPriceB.identifier" from-field="productImport.moIdentifierB"/>
                            <set field="supplierPriceB.type" value="MIN_QUANTITY"/>
                            <set field="supplierPriceB.minimumOrderValue" from-field="productImport.moQtyB" type="BigDecimal"/>
                            <set field="supplierPriceB.unitPrice" from-field="productImport.moUnitPriceB" type="BigDecimal"/>
                            <create-value value-field="supplierPriceB"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.moPriceB">
                            <make-value value-field="supplierPriceB" entity-name="SupplierPrice"/>
                            <set field="supplierPriceB.productId" from-field="productImport.productId"/>
                            <set field="supplierPriceB.supplier" from-field="productImport.supplier"/>
                            <set field="supplierPriceB.identifier" from-field="productImport.moIdentifierB"/>
                            <set field="supplierPriceB.type" value="MIN_PRICE"/>
                            <set field="supplierPriceB.minimumOrderValue" from-field="productImport.moPriceB" type="BigDecimal"/>
                            <set field="supplierPriceB.unitPrice" from-field="productImport.moUnitPriceB" type="BigDecimal"/>
                            <create-value value-field="supplierPriceB"/>
                        </if-not-empty>
                        <!-- B - END -->
                        <!-- C - START -->
                        <if-not-empty field="productImport.moQtyC">
                            <make-value value-field="supplierPriceC" entity-name="SupplierPrice"/>
                            <set field="supplierPriceC.productId" from-field="productImport.productId"/>
                            <set field="supplierPriceC.supplier" from-field="productImport.supplier"/>
                            <set field="supplierPriceC.identifier" from-field="productImport.moIdentifierC"/>
                            <set field="supplierPriceC.type" value="MIN_QUANTITY"/>
                            <set field="supplierPriceC.minimumOrderValue" from-field="productImport.moQtyC" type="BigDecimal"/>
                            <set field="supplierPriceC.unitPrice" from-field="productImport.moUnitPriceC" type="BigDecimal"/>
                            <create-value value-field="supplierPriceC"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.moPriceC">
                            <make-value value-field="supplierPriceC" entity-name="SupplierPrice"/>
                            <set field="supplierPriceC.productId" from-field="productImport.productId"/>
                            <set field="supplierPriceC.supplier" from-field="productImport.supplier"/>
                            <set field="supplierPriceC.identifier" from-field="productImport.moIdentifierC"/>
                            <set field="supplierPriceC.type" value="MIN_PRICE"/>
                            <set field="supplierPriceC.minimumOrderValue" from-field="productImport.moPriceC" type="BigDecimal"/>
                            <set field="supplierPriceC.unitPrice" from-field="productImport.moUnitPriceC" type="BigDecimal"/>
                            <create-value value-field="supplierPriceC"/>
                        </if-not-empty>
                        <!-- C - END -->
                        <!--create supplier price - END -->
                        
                        <!--create Backup supplier price - START -->
                        <!-- A - START -->
                        <if-not-empty field="productImport.backupMoQtyA">
                            <make-value value-field="backupSupplierPriceA" entity-name="SupplierPrice"/>
                            <set field="backupSupplierPriceA.productId" from-field="productImport.productId"/>
                            <set field="backupSupplierPriceA.supplier" from-field="productImport.backupSupplier"/>
                            <set field="backupSupplierPriceA.identifier" from-field="productImport.backupMoIdentifierA"/>
                            <set field="backupSupplierPriceA.type" value="MIN_QUANTITY"/>
                            <set field="backupSupplierPriceA.minimumOrderValue" from-field="productImport.backupMoQtyA" type="BigDecimal"/>
                            <set field="backupSupplierPriceA.unitPrice" from-field="productImport.backupMoUnitPriceA" type="BigDecimal"/>
                            <create-value value-field="backupSupplierPriceA"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.backupMoPriceA">
                            <make-value value-field="backupSupplierPriceA" entity-name="SupplierPrice"/>
                            <set field="backupSupplierPriceA.productId" from-field="productImport.productId"/>
                            <set field="backupSupplierPriceA.supplier" from-field="productImport.backupSupplier"/>
                            <set field="backupSupplierPriceA.identifier" from-field="productImport.backupMoIdentifierA"/>
                            <set field="backupSupplierPriceA.type" value="MIN_PRICE"/>
                            <set field="backupSupplierPriceA.minimumOrderValue" from-field="productImport.backupMoPriceA" type="BigDecimal"/>
                            <set field="backupSupplierPriceA.unitPrice" from-field="productImport.backupMoUnitPriceA" type="BigDecimal"/>
                            <create-value value-field="backupSupplierPriceA"/>
                        </if-not-empty>
                        <!-- A - END -->
                        <!-- B - START -->
                        <if-not-empty field="productImport.backupMoQtyB">
                            <make-value value-field="backupSupplierPriceB" entity-name="SupplierPrice"/>
                            <set field="backupSupplierPriceB.productId" from-field="productImport.productId"/>
                            <set field="backupSupplierPriceB.supplier" from-field="productImport.backupSupplier"/>
                            <set field="backupSupplierPriceB.identifier" from-field="productImport.backupMoIdentifierB"/>
                            <set field="backupSupplierPriceB.type" value="MIN_QUANTITY"/>
                            <set field="backupSupplierPriceB.minimumOrderValue" from-field="productImport.backupMoQtyB" type="BigDecimal"/>
                            <set field="backupSupplierPriceB.unitPrice" from-field="productImport.backupMoUnitPriceB" type="BigDecimal"/>
                            <create-value value-field="backupSupplierPriceB"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.backupMoPriceB">
                            <make-value value-field="backupSupplierPriceB" entity-name="SupplierPrice"/>
                            <set field="backupSupplierPriceB.productId" from-field="productImport.productId"/>
                            <set field="backupSupplierPriceB.supplier" from-field="productImport.backupSupplier"/>
                            <set field="backupSupplierPriceB.identifier" from-field="productImport.backupMoIdentifierB"/>
                            <set field="backupSupplierPriceB.type" value="MIN_PRICE"/>
                            <set field="backupSupplierPriceB.minimumOrderValue" from-field="productImport.backupMoPriceB" type="BigDecimal"/>
                            <set field="backupSupplierPriceB.unitPrice" from-field="productImport.backupMoUnitPriceB" type="BigDecimal"/>
                            <create-value value-field="backupSupplierPriceB"/>
                        </if-not-empty>
                        <!-- B - END -->
                        <!-- C - START -->
                        <if-not-empty field="productImport.backupMoQtyC">
                            <make-value value-field="backupSupplierPriceC" entity-name="SupplierPrice"/>
                            <set field="backupSupplierPriceC.productId" from-field="productImport.productId"/>
                            <set field="backupSupplierPriceC.supplier" from-field="productImport.backupSupplier"/>
                            <set field="backupSupplierPriceC.identifier" from-field="productImport.backupMoIdentifierC"/>
                            <set field="backupSupplierPriceC.type" value="MIN_QUANTITY"/>
                            <set field="backupSupplierPriceC.minimumOrderValue" from-field="productImport.backupMoQtyC" type="BigDecimal"/>
                            <set field="backupSupplierPriceC.unitPrice" from-field="productImport.backupMoUnitPriceC" type="BigDecimal"/>
                            <create-value value-field="backupSupplierPriceC"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.backupMoPriceC">
                            <make-value value-field="backupSupplierPriceC" entity-name="SupplierPrice"/>
                            <set field="backupSupplierPriceC.productId" from-field="productImport.productId"/>
                            <set field="backupSupplierPriceC.supplier" from-field="productImport.backupSupplier"/>
                            <set field="backupSupplierPriceC.identifier" from-field="productImport.backupMoIdentifierC"/>
                            <set field="backupSupplierPriceC.type" value="MIN_PRICE"/>
                            <set field="backupSupplierPriceC.minimumOrderValue" from-field="productImport.backupMoPriceC" type="BigDecimal"/>
                            <set field="backupSupplierPriceC.unitPrice" from-field="productImport.backupMoUnitPriceC" type="BigDecimal"/>
                            <create-value value-field="backupSupplierPriceC"/>
                        </if-not-empty>
                        <!-- C - END -->
                        <!--create Backup supplier price - END -->
                        
                        <!--create product master rival - START -->
                        <if-not-empty field="productImport.rivalItemId">
                            <set field="pmRivalCtx.productId" from-field="productImport.productId"/>
                            <set field="pmRivalCtx.rivalItemId" from-field="productImport.rivalItemId"/>
                            <set field="pmRivalCtx.crawl" value="Y"/>
                            <set field="pmRivalCtx.rivalPlatform" value="EBAY"/>
                            <call-service service-name="createProductRivalGudao" in-map-name="pmRivalCtx" include-user-login="true" break-on-error="false"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.similarItemId">
                            <set field="pmSimilarCtx.productId" from-field="productImport.productId"/>
                            <set field="pmSimilarCtx.similarItemId" from-field="productImport.similarItemId"/>
                            <set field="pmSimilarCtx.crawl" value="Y"/>
                            <set field="pmSimilarCtx.rivalPlatform" value="EBAY_SIMILAR"/>
                            <call-service service-name="createProductRivalGudao" in-map-name="pmSimilarCtx" include-user-login="true" break-on-error="false"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.smtLink">
                            <set field="pmSmtCtx.productId" from-field="productImport.productId"/>
                            <set field="pmSmtCtx.rivalLink" from-field="productImport.smtLink"/>
                            <set field="pmSmtCtx.crawl" value="N"/>
                            <set field="pmSmtCtx.rivalPlatform" value="SMT"/>
                            <call-service service-name="createProductRivalGudao" in-map-name="pmSmtCtx" include-user-login="true" break-on-error="false"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.wishLink">
                            <set field="pmWishCtx.productId" from-field="productImport.productId"/>
                            <set field="pmWishCtx.rivalLink" from-field="productImport.wishLink"/>
                            <set field="pmWishCtx.crawl" value="N"/>
                            <set field="pmWishCtx.rivalPlatform" value="WISH"/>
                            <call-service service-name="createProductRivalGudao" in-map-name="pmWishCtx" include-user-login="true" break-on-error="false"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.amazonLink">
                            <set field="pmAmaCtx.productId" from-field="productImport.productId"/>
                            <set field="pmAmaCtx.rivalLink" from-field="productImport.amazonLink"/>
                            <set field="pmAmaCtx.crawl" value="N"/>
                            <set field="pmAmaCtx.rivalPlatform" value="AMAZON"/>
                            <call-service service-name="createProductRivalGudao" in-map-name="pmAmaCtx" include-user-login="true" break-on-error="false"/>
                        </if-not-empty>
                        <if-not-empty field="productImport.referenceLink">
                            <set field="pmRefCtx.productId" from-field="productImport.productId"/>
                            <set field="pmRefCtx.rivalLink" from-field="productImport.referenceLink"/>
                            <set field="pmRefCtx.crawl" value="N"/>
                            <set field="pmRefCtx.rivalPlatform" value="REFERENCE"/>
                            <call-service service-name="createProductRivalGudao" in-map-name="pmRefCtx" include-user-login="true" break-on-error="false"/>
                        </if-not-empty>
                        <!--create product master rival - END -->
                        
                        <!-- create product listing status - START -->
                        <!--<make-value value-field="productListingStatusFinePicture" entity-name="ProductListingStatus"/>
                        <set field="productListingStatusFinePicture.productId" from-field="productImport.productId"/>
                        <set field="productListingStatusFinePicture.listingStatusTypeId" value="FINE_PICTURE"/>
                        <if-not-empty field="productImport.finePicture">
                            <set field="productListingStatusFinePicture.value" from-field="productImport.finePicture"/>
                            <else>
                                <set field="productListingStatusFinePicture.value" value="N"/>
                            </else>
                        </if-not-empty>
                        <create-value value-field="productListingStatusFinePicture"/>-->
                        
                        <make-value value-field="productListingStatusEbayPicture" entity-name="ProductListingStatus"/>
                        <set field="productListingStatusEbayPicture.productId" from-field="productImport.productId"/>
                        <set field="productListingStatusEbayPicture.listingStatusTypeId" value="EBAY_PICTURE"/>
                        <if-not-empty field="productImport.ebayPicture">
                            <set field="productListingStatusEbayPicture.value" from-field="productImport.ebayPicture"/>
                            <else>
                                <set field="productListingStatusEbayPicture.value" value="N"/>
                            </else>
                        </if-not-empty>
                        <create-value value-field="productListingStatusEbayPicture"/>
                        
                        <make-value value-field="productListingStatusAmaPicture" entity-name="ProductListingStatus"/>
                        <set field="productListingStatusAmaPicture.productId" from-field="productImport.productId"/>
                        <set field="productListingStatusAmaPicture.listingStatusTypeId" value="AMAZON_PICTURE"/>
                        <if-not-empty field="productImport.amazonPicture">
                            <set field="productListingStatusAmaPicture.value" from-field="productImport.amazonPicture"/>
                            <else>
                                <set field="productListingStatusAmaPicture.value" value="N"/>
                            </else>
                        </if-not-empty>
                        <create-value value-field="productListingStatusAmaPicture"/>
                        <!-- create product listing status - END -->
                        <else>
                            <add-error error-list-name="errorMessageList">
                                <fail-message message="ProductId is empty. Not updating anything."/>
                            </add-error>
                            <return/>
                        </else>
                    </if-not-empty>
                    <!-- create product - END -->
                </else>
            </if-not-empty>
            <!--<log level="error" message="${errorMessageList}"/>-->
            <if-empty field="errorMessageList">
                <set field="productImportValue.productImportId" from-field="productImport.productImportId"/>
                <set field="productImportValue.importedStatus" value="Y"/>
                <call-service service-name="updateProductImportGudao" in-map-name="productImportValue"/>
                <!--<set field="refreshPm.productId" from-field="productImport.productId"/>
                <call-service service-name="gudaoRefreshProductMaster" in-map-name="refreshPm"/>-->
                <!--<if-not-empty field="productImport.similarItemId">
                    <set field="crawlRival.itemId" from-field="productImport.similarItemId"/>
                    <set field="crawlRival.clearData" value="Y"/>
                    <call-service service-name="rivalListingMonitor" in-map-name="crawlRival"/>
                </if-not-empty>
                <if-not-empty field="productImport.rivalItemId">
                    <set field="crawlRival.itemId" from-field="productImport.rivalItemId"/>
                    <set field="crawlRival.clearData" value="Y"/>
                    <call-service service-name="rivalListingMonitor" in-map-name="crawlRival"/>
                </if-not-empty>-->
                <!--<set field="updateGps.productIdInput" from-field="productImport.productId"/>
                <call-service service-name="updateProductGps" in-map-name="updateGps"/>-->
                <else>
                    <set field="productImportValue.productImportId" from-field="productImport.productImportId"/>
                    <set field="productImportValue.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                    <call-service service-name="updateProductImportGudao" in-map-name="productImportValue"/>
                </else>
            </if-empty>
        </simple-method>    <!-- importNewProductFromCsv -->
        
        <simple-method method-name="updateProductImportGudao" short-description="Update ProductImportGudao">
            <entity-one entity-name="ProductImportGudao" value-field="productImport" auto-field-map="true"/>
            <check-errors/>
            <set-nonpk-fields map="parameters" value-field="productImport" set-if-null="false"/>
            <store-value value-field="productImport"/>
            <check-errors/>
            <field-to-result field="productImport.productImportId" result-name="productImportId"/>
            <field-to-result field="productImport.importFormId" result-name="importFormId"/>
        </simple-method>    <!-- updateProductImport -->
        
        <simple-method method-name="importNewProductForImportAndMessage" short-description="Import New Product For Import And Message" use-transaction="false">
            <if-not-empty field="parameters.importFormId">
                <field-to-result result-name="fileName" field="parameters.fileName"/>
                <field-to-result result-name="importFormId" field="parameters.importFormId"/>
                <if-not-empty field="parameters.productImportId">
                    <set field="import.importFormId" from-field="parameters.importFormId"/>
                    <set field="import.productImportId" from-field="parameters.productImportId"/>
                    <call-service service-name="importNewProductFromCsvGudao" in-map-name="import" include-user-login="true" break-on-error="false">
                        <result-to-field result-name="errorMessageList"/>
                        <result-to-field result-name="responseMessage"/>
                    </call-service>
                    <if-empty field="errorMessageList">
                        <set field="productImport.productImportId" from-field="parameters.productImportId"/>
                        <set field="productImport.importedStatus" value="Y"/>
                        <set field="productImport.importedDescription" value="Imported Successfully."/>
                        <call-service service-name="updateProductImportGudao" in-map-name="productImport"  break-on-error="false"/>
                        <set field="showMsg" value="Imported [productImportId : ${parameters.productImportId}] Successful"/>
                        <field-to-list list="eventMessageList" field="showMsg"/>
                        <field-to-request field="eventMessageList"/>
                        <else>
                            <set field="productImport.productImportId" from-field="parameters.productImportId"/>
                            <set field="productImport.importedStatus" value="N"/>
                            <set field="productImport.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                            <call-service service-name="updateProductImportGudao" in-map-name="productImport" break-on-error="false" include-user-login="true"/>
                            <field-to-request field="errorMessageList"/>
                            <return response-code="error"/>
                        </else>
                    </if-empty>
                </if-not-empty>
            </if-not-empty>
        </simple-method>    <!-- importNewProductForImportAndMessage -->
        
        <simple-method method-name="deleteProductImport" short-description="Delete ProductImport">
            <!--<entity-and list="orderItemImports" entity-name="OrderItemImport">
                <field-map field-name="orderImportId" from-field="parameters.orderImportId"/>
            </entity-and>
            <check-errors/>
            <iterate entry="orderItemImport" list="orderItemImports">
                <remove-value value-field="orderItemImport"/>
                <check-errors/>
            </iterate>-->
            <entity-one entity-name="ProductImportGudao" value-field="productImport" auto-field-map="true"/>
            <check-errors/>
            <remove-value value-field="productImport"/>
            <check-errors/>
        </simple-method>    <!-- deleteProductImport -->
        
        <simple-method method-name="updateProductIntoBulkProductUpdate" short-description="Update Product into Bulk Product Update" use-transaction="false">
            <if-not-empty field="parameters.updateFormId">
                <field-to-result result-name="fileName" field="parameters.fileName"/>
                <field-to-result result-name="updateFormId" field="parameters.updateFormId"/>
                <field-to-result result-name="productImportId" field="parameters.productImportId"/>
                <if-not-empty field="parameters.productImportId">
                    <set field="update.updateFormId" from-field="parameters.updateFormId"/>
                    <set field="update.productImportId" from-field="parameters.productImportId"/>
                    <entity-one value-field="bulkProductUpdate" entity-name="ProductImportGudao">
                        <field-map field-name="productImportId" from-field="parameters.productImportId"/>
                    </entity-one>
                    <set field="update.productId" from-field="bulkProductUpdate.productId"/>
                    <call-service service-name="importProductUpdateFromCsvGudao" in-map-name="update" include-user-login="true" break-on-error="false">
                        <result-to-field result-name="errorMessageList"/>
                        <result-to-field result-name="responseMessage"/>
                    </call-service>
                    <if-empty field="errorMessageList">
                        <set field="productUpdate.productImportId" from-field="parameters.productImportId"/>
                        <set field="productUpdate.importedStatus" value="Y"/>
                        <set field="productUpdate.importedDescription" value="Updated Successfully."/>
                        <call-service service-name="updateBulkProductUpdateGudao" in-map-name="productUpdate"  break-on-error="false"/>
                        <set field="showMsg" value="Updated [productImportId : ${parameters.productImportId}] Successful"/>
                        <field-to-list list="eventMessageList" field="showMsg"/>
                        <field-to-request field="eventMessageList"/>
                        <else>
                            <set field="productUpdate.productImportId" from-field="parameters.productImportId"/>
                            <set field="productUpdate.importedStatus" value="N"/>
                            <set field="productUpdate.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                            <call-service service-name="updateBulkProductUpdateGudao" in-map-name="productUpdate" break-on-error="false" include-user-login="true"/>
                            <field-to-request field="errorMessageList"/>
                            <return response-code="error"/>
                        </else>
                    </if-empty>
                </if-not-empty>
            </if-not-empty>
        </simple-method>    <!-- updateProductIntoBulkProductUpdate -->
        
        <simple-method method-name="updateBulkProductUpdate" short-description="Update Bulk Product Update">
            <entity-one entity-name="ProductImportGudao" value-field="bulkProductUpdate" auto-field-map="true"/>
            <check-errors/>
            <set-nonpk-fields map="parameters" value-field="bulkProductUpdate" set-if-null="false"/>
            <store-value value-field="bulkProductUpdate"/>
            <check-errors/>
            <field-to-result field="bulkProductUpdate.productImportId" result-name="productImportId"/>
            <field-to-result field="bulkProductUpdate.updateFormId" result-name="updateFormId"/>
        </simple-method>    <!-- updateBulkProductUpdate -->
        
        <simple-method method-name="updateMultiProducts" short-description="update Multi Products" use-transaction="false">
            <set field="updateFormId" from-field="parameters.updateFormId"/>
            
            <entity-and list="bulkProductUpdates" entity-name="ProductImportGudao">
                <field-map field-name="fileName" from-field="parameters.fileName"/>
            </entity-and>
            <set field="isError" value="false" type="Boolean"/>
            <set field="successImport" type="BigDecimal" value="0"/>
            
            <if-not-empty field="bulkProductUpdates">
                <iterate entry="bulkProductUpdate" list="bulkProductUpdates">
                    <if-compare operator="not-equals" value="Y" field="bulkProductUpdate.importedStatus">
                        <set field="updateProductMap.updateFormId" from-field="bulkProductUpdate.updateFormId"/>
                        <if-empty field="updateProductMap.updateFormId">
                            <set field="updateProductMap.updateFormId" from-field="parameters.updateFormId"/>
                        </if-empty>
                        <set field="updateProductMap.productImportId" from-field="bulkProductUpdate.productImportId"/>
                        <set field="updateProductMap.productId" from-field="bulkProductUpdate.productId"/>
                        <call-service service-name="importProductUpdateFromCsvGudao" in-map-name="updateProductMap" include-user-login="true" break-on-error="false">
                            <result-to-field result-name="errorMessageList"/>
                        </call-service>
                        <if-empty field="errorMessageList">
                            <set field="productUpdate.productImportId" from-field="bulkProductUpdate.productImportId"/>
                            <set field="productUpdate.importedStatus" value="Y"/>
                            <set field="productUpdate.importedDescription" value="Updated Successfully."/>
                            <call-service service-name="updateBulkProductUpdateGudao" in-map-name="productUpdate"/>
                            <calculate field="successImport">
                                <calcop operator="add" field="successImport">
                                    <number value="1"/>
                                </calcop>
                            </calculate>
                            <else>
                                <set field="productUpdate.productImportId" from-field="bulkProductUpdate.productImportId"/>
                                <set field="productUpdate.importedStatus" value="N"/>
                                <set field="productUpdate.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                                <call-service service-name="updateBulkProductUpdateGudao" in-map-name="productUpdate" include-user-login="true" break-on-error="false"/>
                                <set field="isError" value="true" type="Boolean"/>
                                <set field="failMessage" value="Update failed! Problem detected at productImportId [${bulkProductUpdate.productImportId}], please fix and re-import."/>
                                <field-to-list list="allErrorMessageList" field="failMessage"/>
                            </else>
                        </if-empty>
                        <clear-field field="errorMessageList"/>
                    </if-compare>
                </iterate>
            </if-not-empty>
            <set field="importedResult" value="Successfully updated ${successImport} product(s)"/>
            <if-not-empty field="allErrorMessageList">
                <field-to-request field="allErrorMessageList" request-name="errorMessageList"/>
            <else>
                <set field="adjustQty.fileName" from-field="parameters.fileName"/>
                <call-service service-name="discontinueAdjustEbayQuantity" in-map-name="adjustQty" include-user-login="true" break-on-error="false"/>
            </else>
            </if-not-empty>
            <if-compare operator="greater" value="0" field="successImport">
                <field-to-list list="eventMessageList" field="importedResult"/>
                <field-to-request field="eventMessageList"/>
            </if-compare>
            <field-to-result result-name="fileName" field="parameters.fileName"/>
            <field-to-result result-name="updateFormId" field="parameters.updateFormId"/>
        </simple-method>    <!-- updateMultiProducts -->
        
        <simple-method method-name="importProductUpdateFromCsv" short-description="">
            <set field="updateFormId" from-field="parameters.updateFormId"/>
            <if-empty field="updateFormId">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="Required updateFormId [productImportId : ${parameters.productImportId}]"/>
                </add-error>
                <return response-code="error"/>
            </if-empty>
            <entity-one value-field="bulkProductUpdate" entity-name="ProductImportGudao">
                <field-map field-name="productImportId" from-field="parameters.productImportId"/>
            </entity-one>
            <if-compare operator="equals" value="Y" field="bulkProductUpdate.importedStatus">
                <return/>
            </if-compare>
            <entity-one value-field="productCheck" entity-name="ProductMaster">
                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
            </entity-one>
            
            <!-- Check errorNotes == START -->
            <if-not-empty field="bulkProductUpdate.errorNotes">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="${bulkProductUpdate.errorNotes}"/>
                </add-error>
                <return response-code="error"/>
            </if-not-empty>
            <!-- Check errorNotes == END -->
            
            <if-not-empty field="bulkProductUpdate.rivalItemId">
                <if>
                    <condition>
                        <if-regexp field="bulkProductUpdate.rivalItemId" expr=".*[\D].*"/>
                    </condition>
                    <then>
                        <add-error error-list-name="errorMessageList">
                            <fail-message message="eBay相同对手出错误 － [ID : ${productImport.productImportId}]"/>
                        </add-error>
                        <return response-code="error"/>
                    </then>
                </if>
            </if-not-empty>
            
            <if-not-empty field="bulkProductUpdate.similarItemId">
                <if>
                    <condition>
                        <if-regexp field="bulkProductUpdate.similarItemId" expr=".*[\D].*"/>
                    </condition>
                    <then>
                        <add-error error-list-name="errorMessageList">
                            <fail-message message="eBay相似对手出错误 － [ID : ${productImport.productImportId}]"/>
                        </add-error>
                        <return response-code="error"/>
                    </then>
                </if>
            </if-not-empty>
            
            <if-empty field="productCheck">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="This product [${bulkProductUpdate.productId}] does not exists. Please use bulk import module"/>
                </add-error>
                <else>  <!-- if productId is not empty - START -->
                    <if-compare operator="equals" value="Y" field="bulkProductUpdate.updateGms">
                        <!-- EBAY US Account == START -->
                        <if-not-empty field="bulkProductUpdate.ebayUsAccount">
                            <entity-and list="gmsEbayUsAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="EBAY"/>
                                <field-map field-name="site" value="US"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.ebayUsAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsEbayUsAccountList">
                                <iterate entry="gmsEbayUsAccount" list="gmsEbayUsAccountList">
                                    <calculate field="gmsEbayUsAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsEbayUsAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsEbayUsAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsEbayUsAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsEbayUsAccount.id"/>
                                    <set field="newGmsEbayUsAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsEbayUsAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsEbayUsAccount.platform" value="EBAY"/>
                                    <set field="newGmsEbayUsAccount.site" value="US"/>
                                    <set field="newGmsEbayUsAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsEbayUsAccount.account" from-field="bulkProductUpdate.ebayUsAccount"/>
                                    <create-value value-field="newGmsEbayUsAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsEbayUsAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsEbayUsAccountHistory.id"/>
                            <set field="gmsEbayUsAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsEbayUsAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsEbayUsAccountHistory.platform" value="EBAY"/>
                            <set field="gmsEbayUsAccountHistory.site" value="US"/>
                            <set field="gmsEbayUsAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsEbayUsAccountHistory.account" from-field="bulkProductUpdate.ebayUsAccount"/>
                            <set field="gmsEbayUsAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsEbayUsAccountHistory"/>
                        </if-not-empty>
                        <!-- EBAY US Account == END -->
                        <!-- EBAY UK Account == START -->
                        <if-not-empty field="bulkProductUpdate.ebayUkAccount">
                            <entity-and list="gmsEbayUkAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="EBAY"/>
                                <field-map field-name="site" value="UK"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.ebayUkAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsEbayUkAccountList">
                                <iterate entry="gmsEbayUkAccount" list="gmsEbayUkAccountList">
                                    <calculate field="gmsEbayUkAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsEbayUkAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsEbayUkAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsEbayUkAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsEbayUkAccount.id"/>
                                    <set field="newGmsEbayUkAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsEbayUkAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsEbayUkAccount.platform" value="EBAY"/>
                                    <set field="newGmsEbayUkAccount.site" value="UK"/>
                                    <set field="newGmsEbayUkAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsEbayUkAccount.account" from-field="bulkProductUpdate.ebayUkAccount"/>
                                    <create-value value-field="newGmsEbayUkAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsEbayUkAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsEbayUkAccountHistory.id"/>
                            <set field="gmsEbayUkAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsEbayUkAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsEbayUkAccountHistory.platform" value="EBAY"/>
                            <set field="gmsEbayUkAccountHistory.site" value="UK"/>
                            <set field="gmsEbayUkAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsEbayUkAccountHistory.account" from-field="bulkProductUpdate.ebayUkAccount"/>
                            <set field="gmsEbayUkAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsEbayUkAccountHistory"/>
                        </if-not-empty>
                        <!-- EBAY UK Account == END -->
                        <!-- EBAY AU Account == START -->
                        <if-not-empty field="bulkProductUpdate.ebayAuAccount">
                            <entity-and list="gmsEbayAuAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="EBAY"/>
                                <field-map field-name="site" value="AU"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.ebayAuAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsEbayAuAccountList">
                                <iterate entry="gmsEbayAuAccount" list="gmsEbayAuAccountList">
                                    <calculate field="gmsEbayAuAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsEbayAuAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsEbayAuAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsEbayAuAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsEbayAuAccount.id"/>
                                    <set field="newGmsEbayAuAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsEbayAuAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsEbayAuAccount.platform" value="EBAY"/>
                                    <set field="newGmsEbayAuAccount.site" value="AU"/>
                                    <set field="newGmsEbayAuAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsEbayAuAccount.account" from-field="bulkProductUpdate.ebayAuAccount"/>
                                    <create-value value-field="newGmsEbayAuAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsEbayAuAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsEbayAuAccountHistory.id"/>
                            <set field="gmsEbayAuAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsEbayAuAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsEbayAuAccountHistory.platform" value="EBAY"/>
                            <set field="gmsEbayAuAccountHistory.site" value="AU"/>
                            <set field="gmsEbayAuAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsEbayAuAccountHistory.account" from-field="bulkProductUpdate.ebayAuAccount"/>
                            <set field="gmsEbayAuAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsEbayAuAccountHistory"/>
                        </if-not-empty>
                        <!-- EBAY AU Account == END -->
                        <!-- EBAY DE Account == START -->
                        <if-not-empty field="bulkProductUpdate.ebayDeAccount">
                            <entity-and list="gmsEbayDeAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="EBAY"/>
                                <field-map field-name="site" value="DE"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.ebayDeAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsEbayDeAccountList">
                                <iterate entry="gmsEbayDeAccount" list="gmsEbayDeAccountList">
                                    <calculate field="gmsEbayDeAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsEbayDeAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsEbayDeAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsEbayDeAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsEbayDeAccount.id"/>
                                    <set field="newGmsEbayDeAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsEbayDeAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsEbayDeAccount.platform" value="EBAY"/>
                                    <set field="newGmsEbayDeAccount.site" value="DE"/>
                                    <set field="newGmsEbayDeAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsEbayDeAccount.account" from-field="bulkProductUpdate.ebayDeAccount"/>
                                    <create-value value-field="newGmsEbayDeAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsEbayDeAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsEbayDeAccountHistory.id"/>
                            <set field="gmsEbayDeAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsEbayDeAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsEbayDeAccountHistory.platform" value="EBAY"/>
                            <set field="gmsEbayDeAccountHistory.site" value="DE"/>
                            <set field="gmsEbayDeAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsEbayDeAccountHistory.account" from-field="bulkProductUpdate.ebayDeAccount"/>
                            <set field="gmsEbayDeAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsEbayDeAccountHistory"/>
                        </if-not-empty>
                        <!-- EBAY DE Account == END -->
                        <!-- EBAY FR Account == START -->
                        <if-not-empty field="bulkProductUpdate.ebayFrAccount">
                            <entity-and list="gmsEbayFrAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="EBAY"/>
                                <field-map field-name="site" value="FR"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.ebayFrAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsEbayFrAccountList">
                                <iterate entry="gmsEbayFrAccount" list="gmsEbayFrAccountList">
                                    <calculate field="gmsEbayFrAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsEbayFrAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsEbayFrAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsEbayFrAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsEbayFrAccount.id"/>
                                    <set field="newGmsEbayFrAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsEbayFrAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsEbayFrAccount.platform" value="EBAY"/>
                                    <set field="newGmsEbayFrAccount.site" value="FR"/>
                                    <set field="newGmsEbayFrAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsEbayFrAccount.account" from-field="bulkProductUpdate.ebayFrAccount"/>
                                    <create-value value-field="newGmsEbayFrAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsEbayFrAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsEbayFrAccountHistory.id"/>
                            <set field="gmsEbayFrAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsEbayFrAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsEbayFrAccountHistory.platform" value="EBAY"/>
                            <set field="gmsEbayFrAccountHistory.site" value="FR"/>
                            <set field="gmsEbayFrAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsEbayFrAccountHistory.account" from-field="bulkProductUpdate.ebayFrAccount"/>
                            <set field="gmsEbayFrAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsEbayFrAccountHistory"/>
                        </if-not-empty>
                        <!-- EBAY FR Account == END -->
                        <!-- SMT Account == START -->
                        <if-not-empty field="bulkProductUpdate.smtAccount">
                            <entity-and list="gmsSmtAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="SMT"/>
                                <field-map field-name="site" value="US"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.smtAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsSmtAccountList">
                                <iterate entry="gmsSmtAccount" list="gmsSmtAccountList">
                                    <calculate field="gmsSmtAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsSmtAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsSmtAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsSmtAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsSmtAccount.id"/>
                                    <set field="newGmsSmtAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsSmtAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsSmtAccount.platform" value="SMT"/>
                                    <set field="newGmsSmtAccount.site" value="US"/>
                                    <set field="newGmsSmtAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsSmtAccount.account" from-field="bulkProductUpdate.smtAccount"/>
                                    <create-value value-field="newGmsSmtAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsSmtAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsSmtAccountHistory.id"/>
                            <set field="gmsSmtAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsSmtAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsSmtAccountHistory.platform" value="SMT"/>
                            <set field="gmsSmtAccountHistory.site" value="US"/>
                            <set field="gmsSmtAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsSmtAccountHistory.account" from-field="bulkProductUpdate.smtAccount"/>
                            <set field="gmsSmtAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsSmtAccountHistory"/>
                        </if-not-empty>
                        <!-- SMT Account == END -->
                        <!-- WISH Account == START -->
                        <if-not-empty field="bulkProductUpdate.wishAccount">
                            <entity-and list="gmsWishAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="WISH"/>
                                <field-map field-name="site" value="US"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.wishAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsWishAccountList">
                                <iterate entry="gmsWishAccount" list="gmsWishAccountList">
                                    <calculate field="gmsWishAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsWishAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsWishAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsWishAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsWishAccount.id"/>
                                    <set field="newGmsWishAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsWishAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsWishAccount.platform" value="WISH"/>
                                    <set field="newGmsWishAccount.site" value="US"/>
                                    <set field="newGmsWishAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsWishAccount.account" from-field="bulkProductUpdate.wishAccount"/>
                                    <create-value value-field="newGmsWishAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsWishAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsWishAccountHistory.id"/>
                            <set field="gmsWishAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsWishAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsWishAccountHistory.platform" value="WISH"/>
                            <set field="gmsWishAccountHistory.site" value="US"/>
                            <set field="gmsWishAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsWishAccountHistory.account" from-field="bulkProductUpdate.wishAccount"/>
                            <set field="gmsWishAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsWishAccountHistory"/>
                        </if-not-empty>
                        <!-- WISH Account == END -->
                        <!-- AMA US Account == START -->
                        <if-not-empty field="bulkProductUpdate.amaUsAccount">
                            <entity-and list="gmsAmaUsAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="AMAZON"/>
                                <field-map field-name="site" value="US"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.amaUsAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsAmaUsAccountList">
                                <iterate entry="gmsAmaUsAccount" list="gmsAmaUsAccountList">
                                    <calculate field="gmsAmaUsAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsAmaUsAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsAmaUsAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsAmaUsAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsAmaUsAccount.id"/>
                                    <set field="newGmsAmaUsAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsAmaUsAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsAmaUsAccount.platform" value="AMAZON"/>
                                    <set field="newGmsAmaUsAccount.site" value="US"/>
                                    <set field="newGmsAmaUsAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsAmaUsAccount.account" from-field="bulkProductUpdate.amaUsAccount"/>
                                    <create-value value-field="newGmsAmaUsAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsAmaUsAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsAmaUsAccountHistory.id"/>
                            <set field="gmsAmaUsAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsAmaUsAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsAmaUsAccountHistory.platform" value="AMAZON"/>
                            <set field="gmsAmaUsAccountHistory.site" value="US"/>
                            <set field="gmsAmaUsAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsAmaUsAccountHistory.account" from-field="bulkProductUpdate.amaUsAccount"/>
                            <set field="gmsAmaUsAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsAmaUsAccountHistory"/>
                        </if-not-empty>
                        <!-- AMA US Account == END -->
                        <!-- AMA UK Account == START -->
                        <if-not-empty field="bulkProductUpdate.amaUkAccount">
                            <entity-and list="gmsAmaUkAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="AMAZON"/>
                                <field-map field-name="site" value="UK"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.amaUkAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsAmaUkAccountList">
                                <iterate entry="gmsAmaUkAccount" list="gmsAmaUkAccountList">
                                    <calculate field="gmsAmaUkAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsAmaUkAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsAmaUkAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsAmaUkAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsAmaUkAccount.id"/>
                                    <set field="newGmsAmaUkAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsAmaUkAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsAmaUkAccount.platform" value="AMAZON"/>
                                    <set field="newGmsAmaUkAccount.site" value="UK"/>
                                    <set field="newGmsAmaUkAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsAmaUkAccount.account" from-field="bulkProductUpdate.amaUkAccount"/>
                                    <create-value value-field="newGmsAmaUkAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsAmaUkAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsAmaUkAccountHistory.id"/>
                            <set field="gmsAmaUkAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsAmaUkAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsAmaUkAccountHistory.platform" value="AMAZON"/>
                            <set field="gmsAmaUkAccountHistory.site" value="UK"/>
                            <set field="gmsAmaUkAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsAmaUkAccountHistory.account" from-field="bulkProductUpdate.amaUkAccount"/>
                            <set field="gmsAmaUkAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsAmaUkAccountHistory"/>
                        </if-not-empty>
                        <!-- AMA UK Account == END -->
                        <!-- AMA CA Account == START -->
                        <if-not-empty field="bulkProductUpdate.amaCaAccount">
                            <entity-and list="gmsAmaCaAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="AMAZON"/>
                                <field-map field-name="site" value="CA"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.amaCaAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsAmaCaAccountList">
                                <iterate entry="gmsAmaCaAccount" list="gmsAmaCaAccountList">
                                    <calculate field="gmsAmaCaAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsAmaCaAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsAmaCaAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsAmaCaAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsAmaCaAccount.id"/>
                                    <set field="newGmsAmaCaAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsAmaCaAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsAmaCaAccount.platform" value="AMAZON"/>
                                    <set field="newGmsAmaCaAccount.site" value="CA"/>
                                    <set field="newGmsAmaCaAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsAmaCaAccount.account" from-field="bulkProductUpdate.amaCaAccount"/>
                                    <create-value value-field="newGmsAmaCaAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsAmaCaAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsAmaCaAccountHistory.id"/>
                            <set field="gmsAmaCaAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsAmaCaAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsAmaCaAccountHistory.platform" value="AMAZON"/>
                            <set field="gmsAmaCaAccountHistory.site" value="CA"/>
                            <set field="gmsAmaCaAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsAmaCaAccountHistory.account" from-field="bulkProductUpdate.amaCaAccount"/>
                            <set field="gmsAmaCaAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsAmaCaAccountHistory"/>
                        </if-not-empty>
                        <!-- AMA CA Account == END -->
                        <!-- AMA DE Account == START -->
                        <if-not-empty field="bulkProductUpdate.amaDeAccount">
                            <entity-and list="gmsAmaDeAccountList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="LISTING_COUNT"/>
                                <field-map field-name="platform" value="AMAZON"/>
                                <field-map field-name="site" value="DE"/>
                                <field-map field-name="account" from-field="bulkProductUpdate.amaDeAccount"/>
                            </entity-and>
                            <if-not-empty field="gmsAmaDeAccountList">
                                <iterate entry="gmsAmaDeAccount" list="gmsAmaDeAccountList">
                                    <calculate field="gmsAmaDeAccount.totalCount" type="Long">
                                        <calcop operator="add" field="gmsAmaDeAccount.totalCount">
                                            <number value="1"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsAmaDeAccount"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsAmaDeAccount" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsAmaDeAccount.id"/>
                                    <set field="newGmsAmaDeAccount.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsAmaDeAccount.type" value="LISTING_COUNT"/>
                                    <set field="newGmsAmaDeAccount.platform" value="AMAZON"/>
                                    <set field="newGmsAmaDeAccount.site" value="DE"/>
                                    <set field="newGmsAmaDeAccount.totalCount" value="1" type="Long"/>
                                    <set field="newGmsAmaDeAccount.account" from-field="bulkProductUpdate.amaDeAccount"/>
                                    <create-value value-field="newGmsAmaDeAccount"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsAmaDeAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsAmaDeAccountHistory.id"/>
                            <set field="gmsAmaDeAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsAmaDeAccountHistory.type" value="LISTING_COUNT"/>
                            <set field="gmsAmaDeAccountHistory.platform" value="AMAZON"/>
                            <set field="gmsAmaDeAccountHistory.site" value="DE"/>
                            <set field="gmsAmaDeAccountHistory.count" value="1" type="Long"/>
                            <set field="gmsAmaDeAccountHistory.account" from-field="bulkProductUpdate.amaDeAccount"/>
                            <set field="gmsAmaDeAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsAmaDeAccountHistory"/>
                        </if-not-empty>
                        <!-- AMA DE Account == END -->
                        <!-- AMA FOLLOW == START -->
                        <!-- <if-compare operator="not-equals" value="0" field="bulkProductUpdate.amaFollow">
                            <entity-and list="gmsAmaFollowList" entity-name="ProductGmsDetail">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="type" value="FOLLOW_COUNT"/>
                                <field-map field-name="platform" value="AMAZON"/>
                                <field-map field-name="site" value="US"/>
                            </entity-and>
                            <if-not-empty field="gmsAmaFollowList">
                                <iterate entry="gmsAmaFollow" list="gmsAmaFollowList">
                                    <calculate field="gmsAmaFollow.totalCount" type="Long">
                                        <calcop operator="add">
                                            <calcop operator="get" field="gmsAmaFollow.totalCount"/>
                                            <calcop operator="get" field="bulkProductUpdate.amaFollow"/>
                                        </calcop>
                                    </calculate>
                                    <store-value value-field="gmsAmaFollow"/>
                                </iterate>
                                <else>
                                    <make-value value-field="newGmsAmaFollow" entity-name="ProductGmsDetail"/>
                                    <sequenced-id sequence-name="ProductGmsDetail" field="newGmsAmaFollow.id"/>
                                    <set field="newGmsAmaFollow.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="newGmsAmaFollow.type" value="FOLLOW_COUNT"/>
                                    <set field="newGmsAmaFollow.platform" value="AMAZON"/>
                                    <set field="newGmsAmaFollow.site" value="US"/>
                                    <set field="newGmsAmaFollow.totalCount" from-field="bulkProductUpdate.amaFollow"/>
                                    <create-value value-field="newGmsAmaFollow"/>
                                </else>
                            </if-not-empty>
                            <make-value value-field="gmsAmaFollowAccountHistory" entity-name="ProductGmsDetailHistory"/>
                            <sequenced-id sequence-name="ProductGmsDetailHistory" field="gmsAmaFollowAccountHistory.id"/>
                            <set field="gmsAmaFollowAccountHistory.productId" from-field="bulkProductUpdate.productId"/>
                            <set field="gmsAmaFollowAccountHistory.type" value="FOLLOW_COUNT"/>
                            <set field="gmsAmaFollowAccountHistory.platform" value="AMAZON"/>
                            <set field="gmsAmaFollowAccountHistory.site" value="US"/>
                            <set field="gmsAmaFollowAccountHistory.count" from-field="bulkProductUpdate.amaFollow"/>
                            <set field="gmsAmaFollowAccountHistory.createdBy" from-field="userLogin.userLoginId"/>
                            <create-value value-field="gmsAmaFollowAccountHistory"/>
                        </if-compare>-->
                        <!-- AMA FOLLOW == END -->
                    <else>
                        <if-compare operator="equals" value="Y" field="bulkProductUpdate.updateProductRelationship">
                            <entity-one value-field="productRelationship" entity-name="ProductRelationship">
                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                <field-map field-name="motherSku" from-field="bulkProductUpdate.motherSku"/>
                                <field-map field-name="type" from-field="bulkProductUpdate.relationshipType"/>
                            </entity-one>
                            <if-not-empty field="productRelationship">
                                <set field="productRelationship.quantity" from-field="bulkProductUpdate.quantity"/>
                                <store-value value-field="productRelationship"/>
                                <else>
                                    <make-value value-field="productRelationshipCreate" entity-name="ProductRelationship"/>
                                    <set field="productRelationshipCreate.productId" from-field="bulkProductUpdate.productId"/>
                                    <set field="productRelationshipCreate.motherSku" from-field="bulkProductUpdate.motherSku"/>
                                    <set field="productRelationshipCreate.type" from-field="bulkProductUpdate.relationshipType"/>
                                    <set field="productRelationshipCreate.quantity" from-field="bulkProductUpdate.quantity"/>
                                    <create-value value-field="productRelationshipCreate"/>
                                </else>
                            </if-not-empty>
                            <else>
                                <now-date-to-env field="nowDate"/>
                                <!-- update product - START -->
                                <!--<set-nonpk-fields map="parameters" value-field="productCheck"/>-->
                                
                                <if-not-empty field="bulkProductUpdate.actualPrice">
                                    <set field="productCheck.actualPrice" from-field="bulkProductUpdate.actualPrice" type="BigDecimal"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.actualWeight">
                                    <set field="productCheck.actualWeight" from-field="bulkProductUpdate.actualWeight"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupMinOrderDays">
                                    <set field="productCheck.backupMinOrderDays" from-field="bulkProductUpdate.backupMinOrderDays"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupSupplier">
                                    <entity-one value-field="backupSupplierList" entity-name="SupplierList">
                                        <field-map field-name="supplier" from-field="bulkProductUpdate.backupSupplier"/>
                                    </entity-one>
                                    <if-empty field="backupSupplierList">
                                        <make-value value-field="backupSupplierListNew" entity-name="SupplierList"/>
                                        <sequenced-id sequence-name="SupplierList" field="backupSupplierListNew.supplierId"/>
                                        <set field="backupSupplierListNew.supplier" from-field="bulkProductUpdate.backupSupplier"/>
                                        <if-not-empty field="bulkProductUpdate.backupHolidayStart">
                                            <set field="backupSupplierListNew.holidayStart" from-field="bulkProductUpdate.backupHolidayStart"/>
                                        </if-not-empty>
                                        <if-not-empty field="bulkProductUpdate.backupHolidayEnd">
                                            <set field="backupSupplierListNew.holidayEnd" from-field="bulkProductUpdate.backupHolidayEnd"/>
                                        </if-not-empty>
                                        <create-value value-field="backupSupplierListNew"/>
                                        <else>
                                            <if-not-empty field="bulkProductUpdate.backupHolidayStart">
                                                <set field="backupSupplierList.holidayStart" from-field="bulkProductUpdate.backupHolidayStart"/>
                                            </if-not-empty>
                                            <if-not-empty field="bulkProductUpdate.backupHolidayEnd">
                                                <set field="backupSupplierList.holidayEnd" from-field="bulkProductUpdate.backupHolidayEnd"/>
                                            </if-not-empty>
                                            <if>
                                                <condition>
                                                    <or>
                                                        <not><if-empty field="bulkProductUpdate.backupHolidayStart"/></not>
                                                        <not><if-empty field="bulkProductUpdate.backupHolidayEnd"/></not>
                                                    </or>
                                                </condition>
                                                <then>
                                                    <store-value value-field="backupSupplierList"/>
                                                </then>
                                            </if>
                                        </else>
                                    </if-empty>
                                    <set field="productCheck.backupSupplier" from-field="bulkProductUpdate.backupSupplier"/>
                                    <if-compare-field field="bulkProductUpdate.backupSupplier" to-field="productCheck.backupSupplier" operator="equals">
                                        <set field="backupSupplierId" from-field="productCheck.backupSupplier"/>
                                        <else>
                                            <set field="backupSupplierId" from-field="bulkProductUpdate.backupSupplier"/>
                                        </else>
                                    </if-compare-field>
                                    <else>
                                        <set field="backupSupplierId" from-field="productCheck.backupSupplier"/>
                                    </else>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupSupplierEta">
                                    <set field="productCheck.backupSupplierEta" from-field="bulkProductUpdate.backupSupplierEta"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupSupplierLink">
                                    <set field="productCheck.backupSupplierLink" from-field="bulkProductUpdate.backupSupplierLink"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.categoryIdChild">
                                    <set field="productCheck.categoryIdChild" from-field="bulkProductUpdate.categoryIdChild"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.categoryIdParent">
                                    <set field="productCheck.categoryIdParent" from-field="bulkProductUpdate.categoryIdParent"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.chineseName">
                                    <set field="productCheck.chineseName" from-field="bulkProductUpdate.chineseName"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.englishName">
                                    <set field="productCheck.englishName" from-field="bulkProductUpdate.englishName"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.createdBy">
                                    <set field="productCheck.createdBy" from-field="bulkProductUpdate.createdBy"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.customSku">
                                    <set field="productCheck.customSku" from-field="bulkProductUpdate.customSku"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.declaredNameCn">
                                    <set field="productCheck.declaredNameCn" from-field="bulkProductUpdate.declaredNameCn"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.declaredNameEn">
                                    <set field="productCheck.declaredNameEn" from-field="bulkProductUpdate.declaredNameEn"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.englishName">
                                    <set field="productCheck.englishName" from-field="bulkProductUpdate.englishName"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.extraStockingDay">
                                    <set field="productCheck.extraStockingDay" from-field="bulkProductUpdate.extraStockingDay"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.imageLink">
                                    <set field="productCheck.imageLink" from-field="bulkProductUpdate.imageLink"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.listingNotes">
                                    <set field="productCheck.listingNotes" from-field="bulkProductUpdate.listingNotes"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.minOrderDays">
                                    <set field="productCheck.minOrderDays" from-field="bulkProductUpdate.minOrderDays"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.supplier">
                                    <entity-one value-field="supplierList" entity-name="SupplierList">
                                        <field-map field-name="supplier" from-field="bulkProductUpdate.supplier"/>
                                    </entity-one>
                                    <if-empty field="supplierList">
                                        <make-value value-field="supplierListNew" entity-name="SupplierList"/>
                                        <sequenced-id sequence-name="SupplierList" field="supplierListNew.supplierId"/>
                                        <set field="supplierListNew.supplier" from-field="bulkProductUpdate.supplier"/>
                                        <if-not-empty field="bulkProductUpdate.supplierHolidayStart">
                                            <set field="supplierListNew.holidayStart" from-field="bulkProductUpdate.supplierHolidayStart"/>
                                        </if-not-empty>
                                        <if-not-empty field="bulkProductUpdate.supplierHolidayEnd">
                                            <set field="supplierListNew.holidayEnd" from-field="bulkProductUpdate.supplierHolidayEnd"/>
                                        </if-not-empty>
                                        <create-value value-field="supplierListNew"/>
                                        <else>
                                            <if-not-empty field="bulkProductUpdate.supplierHolidayStart">
                                                <set field="supplierList.holidayStart" from-field="bulkProductUpdate.supplierHolidayStart"/>
                                            </if-not-empty>
                                            <if-not-empty field="bulkProductUpdate.supplierHolidayEnd">
                                                <set field="supplierList.holidayEnd" from-field="bulkProductUpdate.supplierHolidayEnd"/>
                                            </if-not-empty>
                                            <if>
                                                <condition>
                                                    <or>
                                                        <not><if-empty field="bulkProductUpdate.supplierHolidayStart"/></not>
                                                        <not><if-empty field="bulkProductUpdate.supplierHolidayEnd"/></not>
                                                    </or>
                                                </condition>
                                                <then>
                                                    <store-value value-field="supplierList"/>
                                                </then>
                                            </if>
                                        </else>
                                    </if-empty>
                                    <set field="productCheck.mainSupplier" from-field="bulkProductUpdate.supplier"/>
                                    <if-compare-field field="bulkProductUpdate.supplier" to-field="productCheck.mainSupplier" operator="equals">
                                    <set field="mainSupplierId" from-field="productCheck.mainSupplier"/>
                                    <else>
                                        <set field="mainSupplierId" from-field="bulkProductUpdate.supplier"/>
                                    </else>
                                </if-compare-field>
                                <else>
                                    <set field="mainSupplierId" from-field="productCheck.mainSupplier"/>
                                </else>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.eta">
                                    <set field="productCheck.mainSupplierEta" from-field="bulkProductUpdate.eta"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.supplierLink">
                                    <set field="productCheck.mainSupplierLink" from-field="bulkProductUpdate.supplierLink"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.motherSku">
                                    <set field="productCheck.motherSku" from-field="bulkProductUpdate.motherSku"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.notes">
                                    <set field="productCheck.notes" from-field="bulkProductUpdate.notes"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.ownerGroup">
                                    <set field="productCheck.ownerGroup" from-field="bulkProductUpdate.ownerGroup"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.pictureReady">
                                    <set field="productCheck.pictureReady" from-field="bulkProductUpdate.pictureReady"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.productGroup">
                                    <set field="productCheck.productGroup" from-field="bulkProductUpdate.productGroup"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.productType">
                                    <set field="productCheck.productType" from-field="bulkProductUpdate.productType"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.purchaser">
                                    <set field="productCheck.purchaser" from-field="bulkProductUpdate.purchaser"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.sourcingDate">
                                    <set field="productCheck.sourcingDate" from-field="bulkProductUpdate.sourcingDate"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.weight">
                                    <set field="productCheck.weight" from-field="bulkProductUpdate.weight"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.oversea">
                                    <set field="productCheck.oversea" from-field="bulkProductUpdate.oversea"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.statusId">
                                    <set field="productCheck.statusId" from-field="bulkProductUpdate.statusId"/>
                                    <!-- SET platformStatus to discontinued == START -->
                                    <if-compare operator="equals" value="DISCONTINUED" field="bulkProductUpdate.statusId">
                                        <entity-and list="allDepartmentPlatformList" entity-name="PartyRoleDetailAndPartyDetail">
                                            <field-map field-name="statusId" value="PARTY_ENABLED"/>
                                            <field-map field-name="parentTypeId" value="PLATFORM"/>
                                        </entity-and>
                                        <iterate entry="allDepartmentPlatform" list="allDepartmentPlatformList">
                                            <entity-one value-field="productPlatformStatus" entity-name="ProductMasterStatus">
                                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                                <field-map field-name="department" from-field="allDepartmentPlatform.partyId"/>
                                                <field-map field-name="platform" from-field="allDepartmentPlatform.roleTypeId"/>
                                            </entity-one>
                                            <if-not-empty field="productPlatformStatus">
                                                <set field="productPlatformStatus.statusId" value="断货下架"/>
                                                <store-value value-field="productPlatformStatus"/>
                                                <else>
                                                    <make-value value-field="productPlatformStatusCreate" entity-name="ProductMasterStatus"/>
                                                    <set field="productPlatformStatusCreate.productId" from-field="bulkProductUpdate.productId"/>
                                                    <set field="productPlatformStatusCreate.department" from-field="allDepartmentPlatform.partyId"/>
                                                    <set field="productPlatformStatusCreate.platform" from-field="allDepartmentPlatform.roleTypeId"/>
                                                    <set field="productPlatformStatusCreate.statusId" value="断货下架"/>
                                                    <create-value value-field="productPlatformStatusCreate"/>
                                                </else>
                                            </if-not-empty>
                                            <!--<entity-one value-field="productPlatformGroup" entity-name="ProductMasterGroup">
                                                <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                                <field-map field-name="department" from-field="allDepartmentPlatform.partyId"/>
                                                <field-map field-name="platform" from-field="allDepartmentPlatform.roleTypeId"/>
                                            </entity-one>
                                            <if-not-empty field="productPlatformGroup">
                                                <if-compare operator="equals" value="G3" field="productPlatformGroup.productGroup">
                                                    <set field="productPlatformGroup.productGroup" value="G4"/>
                                                    <store-value value-field="productPlatformGroup"/>
                                                    <else>
                                                        <set field="productPlatformGroup.productGroup" value="G0"/>
                                                        <store-value value-field="productPlatformGroup"/>
                                                    </else>
                                                </if-compare>
                                            </if-not-empty>-->
                                        </iterate>
                                    </if-compare>
                                    <!-- SET platformStatus to discontinued == END -->
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.length">
                                    <set field="productCheck.length" from-field="bulkProductUpdate.length"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.width">
                                    <set field="productCheck.width" from-field="bulkProductUpdate.width"/>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.height">
                                    <set field="productCheck.height" from-field="bulkProductUpdate.height"/>
                                </if-not-empty>
                                
                                <store-value value-field="productCheck"/>
                                
                                <!--<call-service service-name="updateProduct" in-map-name="productCtx" include-user-login="true" break-on-error="false"/>-->
                                <!-- update product - END -->
                                
                                <!--update product master status - START -->
                                <if-not-empty field="bulkProductUpdate.ebayStatusId">
                                    <entity-one value-field="ebayStatus" entity-name="ProductMasterStatus">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="EBAY"/>
                                    </entity-one>
                                    <if-not-empty field="ebayStatus">
                                        <set field="ebayStatus.statusId" from-field="bulkProductUpdate.ebayStatusId"/>
                                        <store-value value-field="ebayStatus"/>
                                        <else>
                                            <make-value value-field="ebayStatus" entity-name="ProductMasterStatus"/>
                                            <set field="ebayStatus.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="ebayStatus.department" from-field="userLogin.partyId"/>
                                            <set field="ebayStatus.platform" value="EBAY"/>
                                            <set field="ebayStatus.statusId" from-field="bulkProductUpdate.ebayStatusId"/>
                                            <create-value value-field="ebayStatus"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.smtStatusId">
                                    <entity-one value-field="smtStatus" entity-name="ProductMasterStatus">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="SMT"/>
                                    </entity-one>
                                    <if-not-empty field="smtStatus">
                                        <set field="smtStatus.statusId" from-field="bulkProductUpdate.smtStatusId"/>
                                        <store-value value-field="smtStatus"/>
                                        <else>
                                            <make-value value-field="smtStatus" entity-name="ProductMasterStatus"/>
                                            <set field="smtStatus.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="smtStatus.department" from-field="userLogin.partyId"/>
                                            <set field="smtStatus.platform" value="SMT"/>
                                            <set field="smtStatus.statusId" from-field="bulkProductUpdate.smtStatusId"/>
                                            <create-value value-field="smtStatus"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.wishStatusId">
                                    <entity-one value-field="wishStatus" entity-name="ProductMasterStatus">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="WISH"/>
                                    </entity-one>
                                    <if-not-empty field="wishStatus">
                                        <set field="wishStatus.statusId" from-field="bulkProductUpdate.wishStatusId"/>
                                        <store-value value-field="wishStatus"/>
                                        <else>
                                            <make-value value-field="wishStatus" entity-name="ProductMasterStatus"/>
                                            <set field="wishStatus.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="wishStatus.department" from-field="userLogin.partyId"/>
                                            <set field="wishStatus.platform" value="WISH"/>
                                            <set field="wishStatus.statusId" from-field="bulkProductUpdate.wishStatusId"/>
                                            <create-value value-field="wishStatus"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.amazonStatusId">
                                    <entity-one value-field="amazonStatus" entity-name="ProductMasterStatus">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="AMAZON"/>
                                    </entity-one>
                                    <if-not-empty field="amazonStatus">
                                        <set field="amazonStatus.statusId" from-field="bulkProductUpdate.amazonStatusId"/>
                                        <store-value value-field="amazonStatus"/>
                                        <else>
                                            <make-value value-field="amazonStatus" entity-name="ProductMasterStatus"/>
                                            <set field="amazonStatus.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="amazonStatus.department" from-field="userLogin.partyId"/>
                                            <set field="amazonStatus.platform" value="AMAZON"/>
                                            <set field="amazonStatus.statusId" from-field="bulkProductUpdate.amazonStatusId"/>
                                            <create-value value-field="amazonStatus"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.lazadaStatusId">
                                    <entity-one value-field="lazadaStatus" entity-name="ProductMasterStatus">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="LAZADA"/>
                                    </entity-one>
                                    <if-not-empty field="lazadaStatus">
                                        <set field="lazadaStatus.statusId" from-field="bulkProductUpdate.lazadaStatusId"/>
                                        <store-value value-field="lazadaStatus"/>
                                        <else>
                                            <make-value value-field="lazadaStatus" entity-name="ProductMasterStatus"/>
                                            <set field="lazadaStatus.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="lazadaStatus.department" from-field="userLogin.partyId"/>
                                            <set field="lazadaStatus.platform" value="LAZADA"/>
                                            <set field="lazadaStatus.statusId" from-field="bulkProductUpdate.lazadaStatusId"/>
                                            <create-value value-field="lazadaStatus"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.cdiscountStatusId">
                                    <entity-one value-field="cdiscountStatus" entity-name="ProductMasterStatus">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="CDISCOUNT"/>
                                    </entity-one>
                                    <if-not-empty field="cdiscountStatus">
                                        <set field="cdiscountStatus.statusId" from-field="bulkProductUpdate.cdiscountStatusId"/>
                                        <store-value value-field="cdiscountStatus"/>
                                        <else>
                                            <make-value value-field="cdiscountStatus" entity-name="ProductMasterStatus"/>
                                            <set field="cdiscountStatus.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="cdiscountStatus.department" from-field="userLogin.partyId"/>
                                            <set field="cdiscountStatus.platform" value="CDISCOUNT"/>
                                            <set field="cdiscountStatus.statusId" from-field="bulkProductUpdate.cdiscountStatusId"/>
                                            <create-value value-field="cdiscountStatus"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.tophatterStatusId">
                                    <entity-one value-field="tophatterStatus" entity-name="ProductMasterStatus">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="TOPHATTER"/>
                                    </entity-one>
                                    <if-not-empty field="tophatterStatus">
                                        <set field="tophatterStatus.statusId" from-field="bulkProductUpdate.tophatterStatusId"/>
                                        <store-value value-field="tophatterStatus"/>
                                        <else>
                                            <make-value value-field="tophatterStatus" entity-name="ProductMasterStatus"/>
                                            <set field="tophatterStatus.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="tophatterStatus.department" from-field="userLogin.partyId"/>
                                            <set field="tophatterStatus.platform" value="TOPHATTER"/>
                                            <set field="tophatterStatus.statusId" from-field="bulkProductUpdate.tophatterStatusId"/>
                                            <create-value value-field="tophatterStatus"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <!--update product master status - END -->
                                
                                <!--update product master group - START -->
                                <!--<if-not-empty field="bulkProductUpdate.ebayPlatformGroup">
                                    <entity-one value-field="ebayPlatformGroupGV" entity-name="ProductMasterGroup">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="EBAY"/>
                                    </entity-one>
                                    <if-not-empty field="ebayPlatformGroupGV">
                                        <set field="ebayPlatformGroupGV.productGroup" from-field="bulkProductUpdate.ebayPlatformGroup"/>
                                        <store-value value-field="ebayPlatformGroupGV"/>
                                        <else>
                                            <make-value value-field="ebayPlatformGroupGV" entity-name="ProductMasterGroup"/>
                                            <set field="ebayPlatformGroupGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="ebayPlatformGroupGV.department" from-field="userLogin.partyId"/>
                                            <set field="ebayPlatformGroupGV.platform" value="EBAY"/>
                                            <set field="ebayPlatformGroupGV.productGroup" from-field="bulkProductUpdate.ebayPlatformGroup"/>
                                            <create-value value-field="ebayPlatformGroupGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.smtPlatformGroup">
                                    <entity-one value-field="smtPlatformGroupGV" entity-name="ProductMasterGroup">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="SMT"/>
                                    </entity-one>
                                    <if-not-empty field="smtPlatformGroupGV">
                                        <set field="smtPlatformGroupGV.productGroup" from-field="bulkProductUpdate.smtPlatformGroup"/>
                                        <store-value value-field="smtPlatformGroupGV"/>
                                        <else>
                                            <make-value value-field="smtPlatformGroupGV" entity-name="ProductMasterGroup"/>
                                            <set field="smtPlatformGroupGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="smtPlatformGroupGV.department" from-field="userLogin.partyId"/>
                                            <set field="smtPlatformGroupGV.platform" value="SMT"/>
                                            <set field="smtPlatformGroupGV.productGroup" from-field="bulkProductUpdate.smtPlatformGroup"/>
                                            <create-value value-field="smtPlatformGroupGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.wishPlatformGroup">
                                    <entity-one value-field="wishPlatformGroupGV" entity-name="ProductMasterGroup">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="WISH"/>
                                    </entity-one>
                                    <if-not-empty field="wishPlatformGroupGV">
                                        <set field="wishPlatformGroupGV.productGroup" from-field="bulkProductUpdate.wishPlatformGroup"/>
                                        <store-value value-field="wishPlatformGroupGV"/>
                                        <else>
                                            <make-value value-field="wishPlatformGroupGV" entity-name="ProductMasterGroup"/>
                                            <set field="wishPlatformGroupGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="wishPlatformGroupGV.department" from-field="userLogin.partyId"/>
                                            <set field="wishPlatformGroupGV.platform" value="WISH"/>
                                            <set field="wishPlatformGroupGV.productGroup" from-field="bulkProductUpdate.wishPlatformGroup"/>
                                            <create-value value-field="wishPlatformGroupGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.amazonPlatformGroup">
                                    <entity-one value-field="amazonPlatformGroupGV" entity-name="ProductMasterGroup">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="AMAZON"/>
                                    </entity-one>
                                    <if-not-empty field="amazonPlatformGroupGV">
                                        <set field="amazonPlatformGroupGV.productGroup" from-field="bulkProductUpdate.amazonPlatformGroup"/>
                                        <store-value value-field="amazonPlatformGroupGV"/>
                                        <else>
                                            <make-value value-field="amazonPlatformGroupGV" entity-name="ProductMasterGroup"/>
                                            <set field="amazonPlatformGroupGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="amazonPlatformGroupGV.department" from-field="userLogin.partyId"/>
                                            <set field="amazonPlatformGroupGV.platform" value="AMAZON"/>
                                            <set field="amazonPlatformGroupGV.productGroup" from-field="bulkProductUpdate.amazonPlatformGroup"/>
                                            <create-value value-field="amazonPlatformGroupGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.lazadaPlatformGroup">
                                    <entity-one value-field="lazadaPlatformGroupGV" entity-name="ProductMasterGroup">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="LAZADA"/>
                                    </entity-one>
                                    <if-not-empty field="lazadaPlatformGroupGV">
                                        <set field="lazadaPlatformGroupGV.productGroup" from-field="bulkProductUpdate.lazadaPlatformGroup"/>
                                        <store-value value-field="lazadaPlatformGroupGV"/>
                                        <else>
                                            <make-value value-field="lazadaPlatformGroupGV" entity-name="ProductMasterGroup"/>
                                            <set field="lazadaPlatformGroupGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="lazadaPlatformGroupGV.department" from-field="userLogin.partyId"/>
                                            <set field="lazadaPlatformGroupGV.platform" value="LAZADA"/>
                                            <set field="lazadaPlatformGroupGV.productGroup" from-field="bulkProductUpdate.lazadaPlatformGroup"/>
                                            <create-value value-field="lazadaPlatformGroupGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.cdiscountPlatformGroup">
                                    <entity-one value-field="cdiscountPlatformGroupGV" entity-name="ProductMasterGroup">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="CDISCOUNT"/>
                                    </entity-one>
                                    <if-not-empty field="cdiscountPlatformGroupGV">
                                        <set field="cdiscountPlatformGroupGV.productGroup" from-field="bulkProductUpdate.cdiscountPlatformGroup"/>
                                        <store-value value-field="cdiscountPlatformGroupGV"/>
                                        <else>
                                            <make-value value-field="cdiscountPlatformGroupGV" entity-name="ProductMasterGroup"/>
                                            <set field="cdiscountPlatformGroupGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="cdiscountPlatformGroupGV.department" from-field="userLogin.partyId"/>
                                            <set field="cdiscountPlatformGroupGV.platform" value="CDISCOUNT"/>
                                            <set field="cdiscountPlatformGroupGV.productGroup" from-field="bulkProductUpdate.cdiscountPlatformGroup"/>
                                            <create-value value-field="cdiscountPlatformGroupGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.tophatterPlatformGroup">
                                    <entity-one value-field="tophatterPlatformGroupGV" entity-name="ProductMasterGroup">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="department" from-field="userLogin.partyId"/>
                                        <field-map field-name="platform" value="TOPHATTER"/>
                                    </entity-one>
                                    <if-not-empty field="tophatterPlatformGroupGV">
                                        <set field="tophatterPlatformGroupGV.productGroup" from-field="bulkProductUpdate.tophatterPlatformGroup"/>
                                        <store-value value-field="tophatterPlatformGroupGV"/>
                                        <else>
                                            <make-value value-field="tophatterPlatformGroupGV" entity-name="ProductMasterGroup"/>
                                            <set field="tophatterPlatformGroupGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="tophatterPlatformGroupGV.department" from-field="userLogin.partyId"/>
                                            <set field="tophatterPlatformGroupGV.platform" value="TOPHATTER"/>
                                            <set field="tophatterPlatformGroupGV.productGroup" from-field="bulkProductUpdate.tophatterPlatformGroup"/>
                                            <create-value value-field="tophatterPlatformGroupGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>-->
                                <!--update product master group - END -->
                                
                                <!--update product price - START -->
                                <if-not-empty field="bulkProductUpdate.priceUsd">
                                    <entity-one value-field="usdPriceCheck" entity-name="ProductMasterPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="platform" value="EBAY"/>
                                        <field-map field-name="type" value="MANUAL"/>
                                        <field-map field-name="site" value="US"/>
                                    </entity-one>
                                    <if-not-empty field="usdPriceCheck">
                                        <set field="usdPriceCheck.price" from-field="bulkProductUpdate.priceUsd"/>
                                        <store-value value-field="usdPriceCheck"/>
                                        <else>
                                            <set field="usdCtx.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="usdCtx.platform" value="EBAY"/>
                                            <set field="usdCtx.type" value="MANUAL"/>
                                            <set field="usdCtx.site" value="US"/>
                                            <set field="usdCtx.currencyId" value="USD"/>
                                            <set field="usdCtx.price" from-field="bulkProductUpdate.priceUsd" type="BigDecimal"/>
                                            <call-service service-name="createProductPriceGudao" in-map-name="usdCtx" include-user-login="true" break-on-error="false"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <!--update product price - END -->
                                
                                <!-- update supplierPrice - START -->
                                <if-not-empty field="bulkProductUpdate.moQtyA">
                                    <entity-one value-field="supplierPriceQtyA" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="mainSupplierId"/>
                                        <field-map field-name="type" value="MIN_QUANTITY"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.moQtyA"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPriceQtyA">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierA">
                                            <set field="supplierPriceQtyA.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                        </if-not-empty>
                                        <set field="supplierPriceQtyA.unitPrice" from-field="bulkProductUpdate.moUnitPriceA" type="BigDecimal"/>
                                        <store-value value-field="supplierPriceQtyA"/>
                                        <else>
                                            <make-value value-field="supplierPriceQtyANew" entity-name="SupplierPrice"/>
                                            <set field="supplierPriceQtyANew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPriceQtyANew.supplier" from-field="mainSupplierId"/>
                                            <set field="supplierPriceQtyANew.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                            <set field="supplierPriceQtyANew.type" value="MIN_QUANTITY"/>
                                            <set field="supplierPriceQtyANew.minimumOrderValue" from-field="bulkProductUpdate.moQtyA" type="BigDecimal"/>
                                            <set field="supplierPriceQtyANew.unitPrice" from-field="bulkProductUpdate.moUnitPriceA" type="BigDecimal"/>
                                            <create-value value-field="supplierPriceQtyANew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.moPriceA">
                                    <entity-one value-field="supplierPricePriceA" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="mainSupplierId"/>
                                        <field-map field-name="type" value="MIN_PRICE"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.moPriceA"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPricePriceA">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierA">
                                            <set field="supplierPricePriceA.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                        </if-not-empty>
                                        <set field="supplierPricePriceA.unitPrice" from-field="bulkProductUpdate.moUnitPriceA" type="BigDecimal"/>
                                        <store-value value-field="supplierPricePriceA"/>
                                        <else>
                                            <make-value value-field="supplierPricePriceANew" entity-name="SupplierPrice"/>
                                            <set field="supplierPricePriceANew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPricePriceANew.supplier" from-field="mainSupplierId"/>
                                            <set field="supplierPricePriceANew.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                            <set field="supplierPricePriceANew.type" value="MIN_PRICE"/>
                                            <set field="supplierPricePriceANew.minimumOrderValue" from-field="bulkProductUpdate.moPriceA" type="BigDecimal"/>
                                            <set field="supplierPricePriceANew.unitPrice" from-field="bulkProductUpdate.moUnitPriceA" type="BigDecimal"/>
                                            <create-value value-field="supplierPricePriceANew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.moQtyB">
                                    <entity-one value-field="supplierPriceQtyB" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="mainSupplierId"/>
                                        <field-map field-name="type" value="MIN_QUANTITY"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.moQtyB"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPriceQtyB">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierB">
                                            <set field="supplierPriceQtyB.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                        </if-not-empty>
                                        <set field="supplierPriceQtyB.unitPrice" from-field="bulkProductUpdate.moUnitPriceB" type="BigDecimal"/>
                                        <store-value value-field="supplierPriceQtyB"/>
                                        <else>
                                            <make-value value-field="supplierPriceQtyBNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPriceQtyBNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPriceQtyBNew.supplier" from-field="mainSupplierId"/>
                                            <set field="supplierPriceQtyBNew.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                            <set field="supplierPriceQtyBNew.type" value="MIN_QUANTITY"/>
                                            <set field="supplierPriceQtyBNew.minimumOrderValue" from-field="bulkProductUpdate.moQtyB" type="BigDecimal"/>
                                            <set field="supplierPriceQtyBNew.unitPrice" from-field="bulkProductUpdate.moUnitPriceB" type="BigDecimal"/>
                                            <create-value value-field="supplierPriceQtyBNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.moPriceB">
                                    <entity-one value-field="supplierPricePriceB" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="mainSupplierId"/>
                                        <field-map field-name="type" value="MIN_PRICE"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.moPriceB"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPricePriceB">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierB">
                                            <set field="supplierPricePriceB.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                        </if-not-empty>
                                        <set field="supplierPricePriceB.unitPrice" from-field="bulkProductUpdate.moUnitPriceB" type="BigDecimal"/>
                                        <store-value value-field="supplierPricePriceB"/>
                                        <else>
                                            <make-value value-field="supplierPricePriceBNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPricePriceBNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPricePriceBNew.supplier" from-field="mainSupplierId"/>
                                            <set field="supplierPricePriceBNew.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                            <set field="supplierPricePriceBNew.type" value="MIN_PRICE"/>
                                            <set field="supplierPricePriceBNew.minimumOrderValue" from-field="bulkProductUpdate.moPriceB" type="BigDecimal"/>
                                            <set field="supplierPricePriceBNew.unitPrice" from-field="bulkProductUpdate.moUnitPriceB" type="BigDecimal"/>
                                            <create-value value-field="supplierPricePriceBNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.moQtyC">
                                    <entity-one value-field="supplierPriceQtyC" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="mainSupplierId"/>
                                        <field-map field-name="type" value="MIN_QUANTITY"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.moQtyC"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPriceQtyC">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierC">
                                            <set field="supplierPriceQtyC.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                        </if-not-empty>
                                        <set field="supplierPriceQtyC.unitPrice" from-field="bulkProductUpdate.moUnitPriceC" type="BigDecimal"/>
                                        <store-value value-field="supplierPriceQtyC"/>
                                        <else>
                                            <make-value value-field="supplierPriceQtyCNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPriceQtyCNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPriceQtyCNew.supplier" from-field="mainSupplierId"/>
                                            <set field="supplierPriceQtyCNew.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                            <set field="supplierPriceQtyCNew.type" value="MIN_QUANTITY"/>
                                            <set field="supplierPriceQtyCNew.minimumOrderValue" from-field="bulkProductUpdate.moQtyC" type="BigDecimal"/>
                                            <set field="supplierPriceQtyCNew.unitPrice" from-field="bulkProductUpdate.moUnitPriceC" type="BigDecimal"/>
                                            <create-value value-field="supplierPriceQtyCNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.moPriceC">
                                    <entity-one value-field="supplierPricePriceC" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="mainSupplierId"/>
                                        <field-map field-name="type" value="MIN_PRICE"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.moPriceC"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPricePriceC">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierC">
                                            <set field="supplierPricePriceC.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                        </if-not-empty>
                                        <set field="supplierPricePriceC.unitPrice" from-field="bulkProductUpdate.moUnitPriceC" type="BigDecimal"/>
                                        <store-value value-field="supplierPricePriceC"/>
                                        <else>
                                            <make-value value-field="supplierPricePriceCNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPricePriceCNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPricePriceCNew.supplier" from-field="mainSupplierId"/>
                                            <set field="supplierPricePriceCNew.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                            <set field="supplierPricePriceCNew.type" value="MIN_PRICE"/>
                                            <set field="supplierPricePriceCNew.minimumOrderValue" from-field="bulkProductUpdate.moPriceC" type="BigDecimal"/>
                                            <set field="supplierPricePriceCNew.unitPrice" from-field="bulkProductUpdate.moUnitPriceC" type="BigDecimal"/>
                                            <create-value value-field="supplierPricePriceCNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                
                                <if-not-empty field="bulkProductUpdate.backupMoQtyA">
                                    <entity-one value-field="supplierPriceQtyA" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="backupSupplierId"/>
                                        <field-map field-name="type" value="MIN_QUANTITY"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.backupMoQtyA"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPriceQtyA">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierA">
                                            <set field="supplierPriceQtyA.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                        </if-not-empty>
                                        <set field="supplierPriceQtyA.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceA" type="BigDecimal"/>
                                        <store-value value-field="supplierPriceQtyA"/>
                                        <else>
                                            <make-value value-field="supplierPriceQtyANew" entity-name="SupplierPrice"/>
                                            <set field="supplierPriceQtyANew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPriceQtyANew.supplier" from-field="backupSupplierId"/>
                                            <set field="supplierPriceQtyANew.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                            <set field="supplierPriceQtyANew.type" value="MIN_QUANTITY"/>
                                            <set field="supplierPriceQtyANew.minimumOrderValue" from-field="bulkProductUpdate.backupMoQtyA" type="BigDecimal"/>
                                            <set field="supplierPriceQtyANew.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceA" type="BigDecimal"/>
                                            <create-value value-field="supplierPriceQtyANew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupMoPriceA">
                                    <entity-one value-field="supplierPricePriceA" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="backupSupplierId"/>
                                        <field-map field-name="type" value="MIN_PRICE"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.backupMoPriceA"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPricePriceA">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierA">
                                            <set field="supplierPricePriceA.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                        </if-not-empty>
                                        <set field="supplierPricePriceA.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceA" type="BigDecimal"/>
                                        <store-value value-field="supplierPricePriceA"/>
                                        <else>
                                            <make-value value-field="supplierPricePriceANew" entity-name="SupplierPrice"/>
                                            <set field="supplierPricePriceANew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPricePriceANew.supplier" from-field="backupSupplierId"/>
                                            <set field="supplierPricePriceANew.identifier" from-field="bulkProductUpdate.moIdentifierA"/>
                                            <set field="supplierPricePriceANew.type" value="MIN_PRICE"/>
                                            <set field="supplierPricePriceANew.minimumOrderValue" from-field="bulkProductUpdate.backupMoPriceA" type="BigDecimal"/>
                                            <set field="supplierPricePriceANew.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceA" type="BigDecimal"/>
                                            <create-value value-field="supplierPricePriceANew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupMoQtyB">
                                    <entity-one value-field="supplierPriceQtyB" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="backupSupplierId"/>
                                        <field-map field-name="type" value="MIN_QUANTITY"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.backupMoQtyB"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPriceQtyB">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierB">
                                            <set field="supplierPriceQtyB.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                        </if-not-empty>
                                        <set field="supplierPriceQtyB.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceB" type="BigDecimal"/>
                                        <store-value value-field="supplierPriceQtyB"/>
                                        <else>
                                            <make-value value-field="supplierPriceQtyBNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPriceQtyBNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPriceQtyBNew.supplier" from-field="backupSupplierId"/>
                                            <set field="supplierPriceQtyBNew.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                            <set field="supplierPriceQtyBNew.type" value="MIN_QUANTITY"/>
                                            <set field="supplierPriceQtyBNew.minimumOrderValue" from-field="bulkProductUpdate.backupMoQtyB" type="BigDecimal"/>
                                            <set field="supplierPriceQtyBNew.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceB" type="BigDecimal"/>
                                            <create-value value-field="supplierPriceQtyBNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupMoPriceB">
                                    <entity-one value-field="supplierPricePriceB" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="backupSupplierId"/>
                                        <field-map field-name="type" value="MIN_PRICE"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.backupMoPriceB"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPricePriceB">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierB">
                                            <set field="supplierPricePriceB.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                        </if-not-empty>
                                        <set field="supplierPricePriceB.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceB" type="BigDecimal"/>
                                        <store-value value-field="supplierPricePriceB"/>
                                        <else>
                                            <make-value value-field="supplierPricePriceBNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPricePriceBNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPricePriceBNew.supplier" from-field="backupSupplierId"/>
                                            <set field="supplierPricePriceBNew.identifier" from-field="bulkProductUpdate.moIdentifierB"/>
                                            <set field="supplierPricePriceBNew.type" value="MIN_PRICE"/>
                                            <set field="supplierPricePriceBNew.minimumOrderValue" from-field="bulkProductUpdate.backupMoPriceB" type="BigDecimal"/>
                                            <set field="supplierPricePriceBNew.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceB" type="BigDecimal"/>
                                            <create-value value-field="supplierPricePriceBNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupMoQtyC">
                                    <entity-one value-field="supplierPriceQtyC" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="backupSupplierId"/>
                                        <field-map field-name="type" value="MIN_QUANTITY"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.backupMoQtyC"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPriceQtyC">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierC">
                                            <set field="supplierPriceQtyC.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                        </if-not-empty>
                                        <set field="supplierPriceQtyC.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceC" type="BigDecimal"/>
                                        <store-value value-field="supplierPriceQtyC"/>
                                        <else>
                                            <make-value value-field="supplierPriceQtyCNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPriceQtyCNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPriceQtyCNew.supplier" from-field="backupSupplierId"/>
                                            <set field="supplierPriceQtyCNew.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                            <set field="supplierPriceQtyCNew.type" value="MIN_QUANTITY"/>
                                            <set field="supplierPriceQtyCNew.minimumOrderValue" from-field="bulkProductUpdate.backupMoQtyC" type="BigDecimal"/>
                                            <set field="supplierPriceQtyCNew.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceC" type="BigDecimal"/>
                                            <create-value value-field="supplierPriceQtyCNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.backupMoPriceC">
                                    <entity-one value-field="supplierPricePriceC" entity-name="SupplierPrice">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="supplier" from-field="backupSupplierId"/>
                                        <field-map field-name="type" value="MIN_PRICE"/>
                                        <field-map field-name="minimumOrderValue" from-field="bulkProductUpdate.backupMoPriceC"/>
                                    </entity-one>
                                    <if-not-empty field="supplierPricePriceC">
                                        <if-not-empty field="bulkProductUpdate.moIdentifierC">
                                            <set field="supplierPricePriceC.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                        </if-not-empty>
                                        <set field="supplierPricePriceC.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceC" type="BigDecimal"/>
                                        <store-value value-field="supplierPricePriceC"/>
                                        <else>
                                            <make-value value-field="supplierPricePriceCNew" entity-name="SupplierPrice"/>
                                            <set field="supplierPricePriceCNew.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="supplierPricePriceCNew.supplier" from-field="backupSupplierId"/>
                                            <set field="supplierPricePriceCNew.identifier" from-field="bulkProductUpdate.moIdentifierC"/>
                                            <set field="supplierPricePriceCNew.type" value="MIN_PRICE"/>
                                            <set field="supplierPricePriceCNew.minimumOrderValue" from-field="bulkProductUpdate.backupMoPriceC" type="BigDecimal"/>
                                            <set field="supplierPricePriceCNew.unitPrice" from-field="bulkProductUpdate.backupMoUnitPriceC" type="BigDecimal"/>
                                            <create-value value-field="supplierPricePriceCNew"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <!-- update supplierPrice - END -->
                                
                                <!--update product master rival - START -->
                                <if-not-empty field="bulkProductUpdate.rivalItemId">
                                    <entity-one value-field="ebayLinkGV" entity-name="ProductMasterRival">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="rivalPlatform" value="EBAY"/>
                                    </entity-one>
                                    <if-not-empty field="ebayLinkGV">
                                        <set field="ebayLinkGV.rivalItemId" from-field="bulkProductUpdate.rivalItemId"/>
                                        <set field="ebayLinkGV.crawl" value="Y"/>
                                        <store-value value-field="ebayLinkGV"/>
                                        <else>
                                            <make-value value-field="ebayLinkGV" entity-name="ProductMasterRival"/>
                                            <set field="ebayLinkGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="ebayLinkGV.rivalPlatform" value="EBAY"/>
                                            <set field="ebayLinkGV.crawl" value="Y"/>
                                            <set field="ebayLinkGV.rivalItemId" from-field="bulkProductUpdate.rivalItemId"/>
                                            <create-value value-field="ebayLinkGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.similarItemId">
                                    <entity-one value-field="ebaySimilarGV" entity-name="ProductMasterRival">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="rivalPlatform" value="EBAY_SIMILAR"/>
                                    </entity-one>
                                    <if-not-empty field="ebaySimilarGV">
                                        <set field="ebaySimilarGV.similarItemId" from-field="bulkProductUpdate.similarItemId"/>
                                        <set field="ebaySimilarGV.crawl" value="Y"/>
                                        <store-value value-field="ebaySimilarGV"/>
                                        <else>
                                            <make-value value-field="ebaySimilarGV" entity-name="ProductMasterRival"/>
                                            <set field="ebaySimilarGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="ebaySimilarGV.rivalPlatform" value="EBAY_SIMILAR"/>
                                            <set field="ebaySimilarGV.crawl" value="Y"/>
                                            <set field="ebaySimilarGV.similarItemId" from-field="bulkProductUpdate.similarItemId"/>
                                            <create-value value-field="ebaySimilarGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.smtLink">
                                    <entity-one value-field="smtLinkGV" entity-name="ProductMasterRival">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="rivalPlatform" value="SMT"/>
                                    </entity-one>
                                    <if-not-empty field="smtLinkGV">
                                        <set field="smtLinkGV.rivalLink" from-field="bulkProductUpdate.smtLink"/>
                                        <set field="smtLinkGV.crawl" value="N"/>
                                        <store-value value-field="smtLinkGV"/>
                                        <else>
                                            <make-value value-field="smtLinkGV" entity-name="ProductMasterRival"/>
                                            <set field="smtLinkGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="smtLinkGV.rivalPlatform" value="SMT"/>
                                            <set field="smtLinkGV.crawl" value="N"/>
                                            <set field="smtLinkGV.rivalLink" from-field="bulkProductUpdate.smtLink"/>
                                            <create-value value-field="smtLinkGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.wishLink">
                                    <entity-one value-field="wishLinkGV" entity-name="ProductMasterRival">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="rivalPlatform" value="WISH"/>
                                    </entity-one>
                                    <if-not-empty field="wishLinkGV">
                                        <set field="wishLinkGV.rivalLink" from-field="bulkProductUpdate.wishLink"/>
                                        <set field="wishLinkGV.crawl" value="N"/>
                                        <store-value value-field="wishLinkGV"/>
                                        <else>
                                            <make-value value-field="wishLinkGV" entity-name="ProductMasterRival"/>
                                            <set field="wishLinkGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="wishLinkGV.rivalPlatform" value="WISH"/>
                                            <set field="wishLinkGV.crawl" value="N"/>
                                            <set field="wishLinkGV.rivalLink" from-field="bulkProductUpdate.wishLink"/>
                                            <create-value value-field="wishLinkGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.amazonLink">
                                    <entity-one value-field="amazonLinkGV" entity-name="ProductMasterRival">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="rivalPlatform" value="AMAZON"/>
                                    </entity-one>
                                    <if-not-empty field="amazonLinkGV">
                                        <set field="amazonLinkGV.rivalLink" from-field="bulkProductUpdate.amazonLink"/>
                                        <set field="amazonLinkGV.crawl" value="N"/>
                                        <store-value value-field="amazonLinkGV"/>
                                        <else>
                                            <make-value value-field="amazonLinkGV" entity-name="ProductMasterRival"/>
                                            <set field="amazonLinkGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="amazonLinkGV.rivalPlatform" value="AMAZON"/>
                                            <set field="amazonLinkGV.crawl" value="N"/>
                                            <set field="amazonLinkGV.rivalLink" from-field="bulkProductUpdate.amazonLink"/>
                                            <create-value value-field="amazonLinkGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.referenceLink">
                                    <entity-one value-field="refLinkGV" entity-name="ProductMasterRival">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="rivalPlatform" value="REFERENCE"/>
                                    </entity-one>
                                    <if-not-empty field="refLinkGV">
                                        <set field="refLinkGV.rivalLink" from-field="bulkProductUpdate.referenceLink"/>
                                        <set field="refLinkGV.crawl" value="N"/>
                                        <store-value value-field="refLinkGV"/>
                                        <else>
                                            <make-value value-field="refLinkGV" entity-name="ProductMasterRival"/>
                                            <set field="refLinkGV.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="refLinkGV.rivalPlatform" value="REFERENCE"/>
                                            <set field="refLinkGV.crawl" value="N"/>
                                            <set field="refLinkGV.rivalLink" from-field="bulkProductUpdate.referenceLink"/>
                                            <create-value value-field="refLinkGV"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <!--update product master rival - END -->
                                
                                <!-- update product listing - START -->
                                <!--<if-not-empty field="bulkProductUpdate.ebayUsListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productEbayListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_US_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productEbayListing">
                                        <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayUsListing"/>
                                        <store-value value-field="productEbayListing"/>
                                        <else>
                                            <make-value value-field="productEbayListing" entity-name="ProductListingStatus"/>
                                            <set field="productEbayListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productEbayListing.listingStatusTypeId" value="EBAY_US_LISTING"/>
                                            <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayUsListing"/>
                                            <create-value value-field="productEbayListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.ebayUkListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productEbayListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_UK_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productEbayListing">
                                        <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayUkListing"/>
                                        <store-value value-field="productEbayListing"/>
                                        <else>
                                            <make-value value-field="productEbayListing" entity-name="ProductListingStatus"/>
                                            <set field="productEbayListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productEbayListing.listingStatusTypeId" value="EBAY_UK_LISTING"/>
                                            <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayUkListing"/>
                                            <create-value value-field="productEbayListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.ebayAuListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productEbayListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_AU_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productEbayListing">
                                        <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayAuListing"/>
                                        <store-value value-field="productEbayListing"/>
                                        <else>
                                            <make-value value-field="productEbayListing" entity-name="ProductListingStatus"/>
                                            <set field="productEbayListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productEbayListing.listingStatusTypeId" value="EBAY_AU_LISTING"/>
                                            <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayAuListing"/>
                                            <create-value value-field="productEbayListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.ebayCaListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productEbayListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_CA_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productEbayListing">
                                        <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayCaListing"/>
                                        <store-value value-field="productEbayListing"/>
                                        <else>
                                            <make-value value-field="productEbayListing" entity-name="ProductListingStatus"/>
                                            <set field="productEbayListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productEbayListing.listingStatusTypeId" value="EBAY_CA_LISTING"/>
                                            <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayCaListing"/>
                                            <create-value value-field="productEbayListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.ebayDeListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productEbayListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_DE_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productEbayListing">
                                        <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayDeListing"/>
                                        <store-value value-field="productEbayListing"/>
                                        <else>
                                            <make-value value-field="productEbayListing" entity-name="ProductListingStatus"/>
                                            <set field="productEbayListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productEbayListing.listingStatusTypeId" value="EBAY_DE_LISTING"/>
                                            <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayDeListing"/>
                                            <create-value value-field="productEbayListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.ebayFrListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productEbayListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_FR_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productEbayListing">
                                        <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayFrListing"/>
                                        <store-value value-field="productEbayListing"/>
                                        <else>
                                            <make-value value-field="productEbayListing" entity-name="ProductListingStatus"/>
                                            <set field="productEbayListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productEbayListing.listingStatusTypeId" value="EBAY_FR_LISTING"/>
                                            <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayFrListing"/>
                                            <create-value value-field="productEbayListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.ebayEsListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productEbayListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_ES_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productEbayListing">
                                        <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayEsListing"/>
                                        <store-value value-field="productEbayListing"/>
                                        <else>
                                            <make-value value-field="productEbayListing" entity-name="ProductListingStatus"/>
                                            <set field="productEbayListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productEbayListing.listingStatusTypeId" value="EBAY_ES_LISTING"/>
                                            <set field="productEbayListing.value" from-field="bulkProductUpdate.ebayEsListing"/>
                                            <create-value value-field="productEbayListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.smtListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productSmtListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="SMT_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productSmtListing">
                                        <set field="productSmtListing.value" from-field="bulkProductUpdate.smtListing"/>
                                        <store-value value-field="productSmtListing"/>
                                        <else>
                                            <make-value value-field="productSmtListing" entity-name="ProductListingStatus"/>
                                            <set field="productSmtListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productSmtListing.listingStatusTypeId" value="SMT_LISTING"/>
                                            <set field="productSmtListing.value" from-field="bulkProductUpdate.smtListing"/>
                                            <create-value value-field="productSmtListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.amaListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productAmaListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="AMA_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productAmaListing">
                                        <set field="productAmaListing.value" from-field="bulkProductUpdate.amaListing"/>
                                        <store-value value-field="productAmaListing"/>
                                        <else>
                                            <make-value value-field="productAmaListing" entity-name="ProductListingStatus"/>
                                            <set field="productAmaListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productAmaListing.listingStatusTypeId" value="AMA_LISTING"/>
                                            <set field="productAmaListing.value" from-field="bulkProductUpdate.amaListing"/>
                                            <create-value value-field="productAmaListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.wishListing">
                                    <entity-one entity-name="ProductListingStatus" value-field="productWishListing">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="WISH_LISTING"/>
                                    </entity-one>
                                    <if-not-empty field="productWishListing">
                                        <set field="productWishListing.value" from-field="bulkProductUpdate.wishListing"/>
                                        <store-value value-field="productWishListing"/>
                                        <else>
                                            <make-value value-field="productWishListing" entity-name="ProductListingStatus"/>
                                            <set field="productWishListing.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productWishListing.listingStatusTypeId" value="WISH_LISTING"/>
                                            <set field="productWishListing.value" from-field="bulkProductUpdate.wishListing"/>
                                            <create-value value-field="productWishListing"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>-->
                                <if-not-empty field="bulkProductUpdate.ebayPicture">
                                    <entity-one entity-name="ProductListingStatus" value-field="productListingStatusEbayPicture">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="EBAY_PICTURE"/>
                                    </entity-one>
                                    <if-not-empty field="productListingStatusEbayPicture">
                                        <set field="productListingStatusEbayPicture.value" from-field="bulkProductUpdate.ebayPicture"/>
                                        <store-value value-field="productListingStatusEbayPicture"/>
                                        <else>
                                            <make-value value-field="productListingStatusEbayPicture" entity-name="ProductListingStatus"/>
                                            <set field="productListingStatusEbayPicture.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productListingStatusEbayPicture.listingStatusTypeId" value="EBAY_PICTURE"/>
                                            <set field="productListingStatusEbayPicture.value" from-field="bulkProductUpdate.ebayPicture"/>
                                            <create-value value-field="productListingStatusEbayPicture"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <if-not-empty field="bulkProductUpdate.amazonPicture">
                                    <entity-one entity-name="ProductListingStatus" value-field="productListingStatusAmazonPicture">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="AMAZON_PICTURE"/>
                                    </entity-one>
                                    <if-not-empty field="productListingStatusAmazonPicture">
                                        <set field="productListingStatusAmazonPicture.value" from-field="bulkProductUpdate.amazonPicture"/>
                                        <store-value value-field="productListingStatusAmazonPicture"/>
                                        <else>
                                            <make-value value-field="productListingStatusAmazonPicture" entity-name="ProductListingStatus"/>
                                            <set field="productListingStatusAmazonPicture.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productListingStatusAmazonPicture.listingStatusTypeId" value="AMAZON_PICTURE"/>
                                            <set field="productListingStatusAmazonPicture.value" from-field="bulkProductUpdate.amazonPicture"/>
                                            <create-value value-field="productListingStatusAmazonPicture"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <!--<if-not-empty field="bulkProductUpdate.listingCheck">
                                    <entity-one entity-name="ProductListingStatus" value-field="productListingStatusListingCheck">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="LISTING_CHECK"/>
                                    </entity-one>
                                    <if-not-empty field="productListingStatusListingCheck">
                                        <set field="productListingStatusListingCheck.value" from-field="bulkProductUpdate.listingCheck"/>
                                        <store-value value-field="productListingStatusListingCheck"/>
                                        <else>
                                            <make-value value-field="productListingStatusListingCheck" entity-name="ProductListingStatus"/>
                                            <set field="productListingStatusListingCheck.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productListingStatusListingCheck.listingStatusTypeId" value="LISTING_CHECK"/>
                                            <set field="productListingStatusListingCheck.value" from-field="bulkProductUpdate.listingCheck"/>
                                            <create-value value-field="productListingStatusListingCheck"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>-->
                                <if-not-empty field="bulkProductUpdate.finePicture">
                                    <entity-one entity-name="ProductListingStatus" value-field="productListingStatusFinePicture">
                                        <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                        <field-map field-name="listingStatusTypeId" value="FINE_PICTURE"/>
                                    </entity-one>
                                    <if-not-empty field="productListingStatusFinePicture">
                                        <set field="productListingStatusFinePicture.value" from-field="bulkProductUpdate.finePicture"/>
                                        <store-value value-field="productListingStatusFinePicture"/>
                                        <else>
                                            <make-value value-field="productListingStatusFinePicture" entity-name="ProductListingStatus"/>
                                            <set field="productListingStatusFinePicture.productId" from-field="bulkProductUpdate.productId"/>
                                            <set field="productListingStatusFinePicture.listingStatusTypeId" value="FINE_PICTURE"/>
                                            <set field="productListingStatusFinePicture.value" from-field="bulkProductUpdate.finePicture"/>
                                            <create-value value-field="productListingStatusFinePicture"/>
                                        </else>
                                    </if-not-empty>
                                </if-not-empty>
                                <!-- update product listing - END -->
                                
                                <!-- update product lister - START -->
                                <if>
                                    <condition>
                                        <and>
                                            <not><if-empty field="bulkProductUpdate.listerPlatform"/></not>
                                            <not><if-empty field="bulkProductUpdate.lister"/></not>
                                        </and>
                                    </condition>
                                    <then>
                                        <entity-one entity-name="ProductLister" value-field="productListerCheck">
                                            <field-map field-name="productId" from-field="bulkProductUpdate.productId"/>
                                            <field-map field-name="listerPlatform" from-field="bulkProductUpdate.listerPlatform"/>
                                        </entity-one>
                                        <if-not-empty field="productListerCheck">
                                            <set field="productListerCheck.lister" from-field="bulkProductUpdate.lister"/>
                                            <store-value value-field="productListerCheck"/>
                                            <else>
                                                <make-value value-field="productLister" entity-name="ProductLister"/>
                                                <set field="productLister.productId" from-field="bulkProductUpdate.productId"/>
                                                <set field="productLister.listerPlatform" from-field="bulkProductUpdate.listerPlatform"/>
                                                <set field="productLister.lister" from-field="bulkProductUpdate.lister"/>
                                                <create-value value-field="productLister"/>
                                            </else>
                                        </if-not-empty>
                                    </then>
                                </if>
                                <!-- update product lister - END -->
                            </else>
                        </if-compare>
                    </else>
                    </if-compare>
                </else> <!-- if productId is not empty - END -->
            </if-empty>
            <!--<log level="error" message="${errorMessageList}"/>-->
            <if-empty field="errorMessageList">
                <set field="productUpdate.productImportId" from-field="bulkProductUpdate.productImportId"/>
                <set field="productUpdate.importedStatus" value="Y"/>
                <call-service service-name="updateBulkProductUpdateGudao" in-map-name="productUpdate"/>
                <!--<set field="refreshPm.productId" from-field="bulkProductUpdate.productId"/>
                <call-service service-name="gudaoRefreshProductMaster" in-map-name="refreshPm"/>-->
                <if-not-empty field="bulkProductUpdate.similarItemId">
                    <set field="crawlRivalSimilar.itemId" from-field="bulkProductUpdate.similarItemId"/>
                    <set field="crawlRivalSimilar.clearData" value="Y"/>
                    <call-service service-name="rivalListingMonitor" in-map-name="crawlRivalSimilar"/>
                </if-not-empty>
                <if-not-empty field="bulkProductUpdate.rivalItemId">
                    <set field="crawlRival.itemId" from-field="bulkProductUpdate.rivalItemId"/>
                    <set field="crawlRival.clearData" value="Y"/>
                    <call-service service-name="rivalListingMonitor" in-map-name="crawlRival"/>
                </if-not-empty>
                <!--<set field="updateGps.productIdInput" from-field="bulkProductUpdate.productId"/>
                <call-service service-name="updateProductGps" in-map-name="updateGps"/>-->
                <if-compare operator="equals" value="Y" field="bulkProductUpdate.updateGms">
                    <set field="updateGms.productIdInput" from-field="bulkProductUpdate.productId"/>
                    <call-service service-name="updateProductGms" in-map-name="updateGms"/>
                </if-compare>
                <else>
                    <set field="productUpdate.productImportId" from-field="bulkProductUpdate.productImportId"/>
                    <set field="productUpdate.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                    <call-service service-name="updateBulkProductUpdateGudao" in-map-name="productUpdate"/>
                </else>
                <!--<set field="checkPlatformGroupMap.productId" from-field="bulkProductUpdate.productId"/>
                <call-service service-name="gudaoCheckPlatformGroup" in-map-name="checkPlatformGroupMap"/>-->
            </if-empty>
            <!--create product price - END -->
            <field-to-result result-name="productId" field="bulkProductUpdate.productId"/>
        </simple-method>    <!-- importProductUpdateFromCsv -->
        
        <simple-method method-name="createBulkProductUpdate" short-description="Create Bulk Product Update">
            <make-value value-field="newEntity" entity-name="BulkProductUpdate"/>
            <if-empty field="parameters.productId">
                <add-error error-list-name="_error_message_list_">
                    <fail-message message="empty Product ID, check SKU record field in csv file line number ${parameters.fileLineNumber}"/>
                </add-error>
            </if-empty>
            <if-empty field="parameters.fileName">
                <add-error error-list-name="_error_message_list_">
                    <fail-message message="empty FILE_NAME in csv file line number ${parameters.fileLineNumber}"/>
                </add-error>
            </if-empty>
            <if-empty field="_error_message_list_">
                <set-pk-fields map="parameters" value-field="newEntity"/>
                <set-nonpk-fields map="parameters" value-field="newEntity"/>
                <create-value value-field="newEntity"/>
                <check-errors error-code="error"/>
                <else>
                    <add-error error-list-name="errorMessageList">
                        <fail-message message="ERROR: ${_error_message_list_} on ${parameters.productId}"/>
                    </add-error>
                    <check-errors error-list-name="errorMessageList" error-code="error"/>
                </else>
            </if-empty>
        </simple-method> <!-- createBulkProductUpdate -->
        
        <simple-method method-name="deleteBulkProductUpdate" short-description="Delete BulkProductUpdate">
            <!--<entity-and list="orderItemImports" entity-name="OrderItemImport">
             <field-map field-name="orderImportId" from-field="parameters.orderImportId"/>
             </entity-and>
             <check-errors/>
             <iterate entry="orderItemImport" list="orderItemImports">
             <remove-value value-field="orderItemImport"/>
             <check-errors/>
             </iterate>-->
            <entity-one entity-name="ProductImportGudao" value-field="bulkProductUpdate" auto-field-map="true"/>
            <check-errors/>
            <remove-value value-field="bulkProductUpdate"/>
            <check-errors/>
        </simple-method>    <!-- deleteBulkProductUpdate -->
        
        <simple-method method-name="createProductGudao" short-description="Create a Product">
            <make-value value-field="newEntity" entity-name="ProductMaster"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
        </simple-method>
        
        <simple-method method-name="createProductPriceGudao" short-description="Create ProductMasterPrice">
            <make-value value-field="newEntity" entity-name="ProductMasterPrice"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
        </simple-method>
        
       <!-- <simple-method method-name="createProductSupplierGudao" short-description="Create an ProductMasterSupplier">
            <make-value value-field="newEntity" entity-name="ProductMasterSupplier"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
        </simple-method>-->
        
        <simple-method method-name="createProductRivalGudao" short-description="Create an ProductMasterRival">
            <make-value value-field="newEntity" entity-name="ProductMasterRival"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
        </simple-method>
        
        <simple-method method-name="updateProductPriceGudao" short-description="Update an ProductPrice">
            <entity-one entity-name="ProductMasterPrice" value-field="lookedUpValue"/>
            <set-pk-fields map="parameters" value-field="lookedUpValue"/>
            <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
            <store-value value-field="lookedUpValue"/>
        </simple-method>
        
        <!-- Report - START -->
        <simple-method method-name="doUploadReportProfitXlsFile" short-description=""><call-class-method class-name="org.ofbiz.content.layout.LayoutWorker"
            method-name="uploadImageAndParameters" ret-field="formInput">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
            <string value="uploadedFile"/>
        </call-class-method>
        <set field="importFormId" from-field="formInput.formInput.importFormId"/>
        <field-to-request field="importFormId"/>
        <if-empty field="formInput.formInput.importFormId">
            <set field="showMsg" value="Please Choose Bulk Import Type"/>
            <field-to-list list="errorMessageList" field="showMsg"/>
            <field-to-request field="errorMessageList"/>
            <return response-code="error"/>
        </if-empty>
        <if-empty field="formInput.imageFileName">
            <set field="showMsg" value="No file to upload."/>
            <field-to-list list="errorMessageList" field="showMsg"/>
            <field-to-request field="errorMessageList"/>
            <return response-code="error"/>
        </if-empty>
        <set field="csvCtx.uploadedFile" from-field="formInput.imageData"/>
        <set field="csvCtx._uploadedFile_fileName" from-field="formInput.imageFileName"/>
        <set field="csvCtx.importFormId" from-field="formInput.formInput.importFormId"/>
        <call-service service-name="uploadReportXlsFileGudao" in-map-name="csvCtx" include-user-login="true">
            <result-to-field result-name="errorMessageList"/>
        </call-service>
        <if-empty field="errorMessageList">
            <set field="showMsg" value="Uploaded Successful."/>
            <field-to-list list="eventMessageList" field="showMsg"/>
            <field-to-request field="eventMessageList"/>
        </if-empty>
        </simple-method>    <!-- doUploadReportProfitXlsFile -->
        
        <simple-method method-name="createReportImport" short-description="Create Report Import">
            <make-value value-field="newEntity" entity-name="ReportImport"/>
            <if-empty field="parameters.fileName">
                <add-error error-list-name="_error_message_list_">
                    <fail-message message="empty FILE_NAME in file line number ${parameters.fileLineNumber}"/>
                </add-error>
            </if-empty>
            <if-empty field="_error_message_list_">
                <set-pk-fields map="parameters" value-field="newEntity"/>
                <set-nonpk-fields map="parameters" value-field="newEntity"/>
                <create-value value-field="newEntity"/>
                <check-errors error-code="error"/>
                <else>
                    <add-error error-list-name="errorMessageList">
                        <fail-message message="ERROR: ${_error_message_list_} on ${parameters.productId}"/>
                    </add-error>
                    <check-errors error-list-name="errorMessageList" error-code="error"/>
                </else>
            </if-empty>
        </simple-method> <!-- createReportImport -->
        
        <simple-method method-name="importMultiReports" short-description="import Multi Reports" use-transaction="false">
            <set field="importFormId" from-field="parameters.importFormId"/>
            <field-to-result result-name="fileName" field="parameters.fileName"/>
            <field-to-result result-name="importFormId" field="parameters.importFormId"/>
            <entity-and list="reportImports" entity-name="ReportImport">
                <field-map field-name="fileName" from-field="parameters.fileName"/>
            </entity-and>
            <set field="isError" value="false" type="Boolean"/>
            <set field="successImport" type="BigDecimal" value="0"/>
            
            <if-not-empty field="reportImports">
                <iterate entry="reportImport" list="reportImports">
                    <if-compare operator="not-equals" value="Y" field="reportImport.importedStatus">
                        <set field="importNewReport.importFormId" from-field="reportImport.importFormId"/>
                        <if-empty field="importNewReport.importFormId">
                            <set field="importNewReport.importFormId" from-field="parameters.importFormId"/>
                        </if-empty>
                        <set field="importNewReport.reportImportId" from-field="reportImport.reportImportId"/>
                        <call-service service-name="importNewReportFromCsvGudao" in-map-name="importNewReport" include-user-login="true" break-on-error="false">
                            <result-to-field result-name="errorMessageList"/>
                        </call-service>
                        <if-empty field="errorMessageList">
                            <set field="reportImportValue.reportImportId" from-field="reportImport.reportImportId"/>
                            <set field="reportImportValue.importedStatus" value="Y"/>
                            <set field="reportImportValue.importedDescription" value="Imported Successfully."/>
                            <call-service service-name="updateReportImportGudao" in-map-name="reportImportValue"/>
                            <calculate field="successImport">
                                <calcop operator="add" field="successImport">
                                    <number value="1"/>
                                </calcop>
                            </calculate>
                            <else>
                                <set field="reportImportValue.reportImportId" from-field="reportImport.reportImportId"/>
                                <set field="reportImportValue.importedStatus" value="N"/>
                                <set field="reportImportValue.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                                <call-service service-name="updateReportImportGudao" in-map-name="reportImportValue" include-user-login="true" break-on-error="false"/>
                                <set field="isError" value="true" type="Boolean"/>
                                <set field="failMessage" value="Importation failed! Problem detected at reportImportId [${reportImport.reportImportId}], please fix and re-import."/>
                                <field-to-list list="allErrorMessageList" field="failMessage"/>
                            </else>
                        </if-empty>
                        <clear-field field="errorMessageList"/>
                    </if-compare>
                </iterate>
            </if-not-empty>
            <set field="importedResult" value="Successfully imported ${successImport} product(s)"/>
            <if-not-empty field="allErrorMessageList">
                <field-to-request field="allErrorMessageList" request-name="errorMessageList"/>
            </if-not-empty>
            <if-compare operator="greater" value="0" field="successImport">
                <field-to-list list="eventMessageList" field="importedResult"/>
                <field-to-request field="eventMessageList"/>
            </if-compare>
        </simple-method>    <!-- importMultiReports -->
        
        <simple-method method-name="updateReportImportGudao" short-description="Update ReportImportGudao">
            <entity-one entity-name="ReportImport" value-field="reportImport" auto-field-map="true"/>
            <check-errors/>
            <set-nonpk-fields map="parameters" value-field="reportImport" set-if-null="false"/>
            <store-value value-field="reportImport"/>
            <check-errors/>
            <field-to-result field="reportImport.reportImportId" result-name="reportImportId"/>
            <field-to-result field="reportImport.importFormId" result-name="importFormId"/>
        </simple-method>    <!-- updateReportImportGudao -->
        
        <simple-method method-name="importNewReportFromCsv" short-description="">
            <now-date-to-env field="nowDate"/>
            <set field="importFormId" from-field="parameters.importFormId"/>
            <if-empty field="importFormId">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="Required importFormId [reportImportId : ${reportImport.reportImportId}]"/>
                </add-error>
                <return response-code="error"/>
            </if-empty>
            <entity-one value-field="reportImport" entity-name="ReportImport">
                <field-map field-name="reportImportId" from-field="parameters.reportImportId"/>
            </entity-one>
            <if-compare operator="equals" value="Y" field="reportImport.importedStatus">
                <return/>
            </if-compare>
            
            <!-- Check mandatory input - START -->
            <entity-one value-field="reportCheck" entity-name="ReportProfit">
                <field-map field-name="orderId" from-field="reportImport.orderId"/>
                <field-map field-name="platform" from-field="reportImport.platform"/>
                <field-map field-name="ownerGroup" from-field="reportImport.ownerGroup"/>
            </entity-one>
            <if-empty field="reportImport.orderId">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="Order ID is missing - [reportImportId : ${reportImport.reportImportId}]"/>
                </add-error>
                <return response-code="error"/>
            </if-empty>
            <if-empty field="reportImport.platform">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="Product Weight is missing - [reportImportId : ${reportImport.reportImportId}]"/>
                </add-error>
                <return response-code="error"/>
            </if-empty>
            <if-empty field="reportImport.ownerGroup">
                <add-error error-list-name="errorMessageList">
                    <fail-message message="statusId is missing - [reportImportId : ${reportImport.reportImportId}]"/>
                </add-error>
                <return response-code="error"/>
            </if-empty>
            <!-- Check mandatory input - END -->
            
            <set field="reportCtx.orderId" from-field="reportImport.orderId"/>
            <set field="reportCtx.orderDate" from-field="reportImport.orderDate"/>
            <set field="reportCtx.currencyRate" from-field="reportImport.currencyRate"/>
            <set field="reportCtx.platform" from-field="reportImport.platform"/>
            <set field="reportCtx.salesRmb" from-field="reportImport.salesRmb"/>
            <set field="reportCtx.salesOriginal" from-field="reportImport.salesOriginal"/>
            <set field="reportCtx.shippingRmb" from-field="reportImport.shippingRmb"/>
            <set field="reportCtx.shippingOriginal" from-field="reportImport.shippingOriginal"/>
            <set field="reportCtx.totalSales" from-field="reportImport.totalSales"/>
            <set field="reportCtx.productCost" from-field="reportImport.productCost"/>
            <set field="reportCtx.shippingCost" from-field="reportImport.shippingCost"/>
            <set field="reportCtx.paypalRmb" from-field="reportImport.paypalRmb"/>
            <set field="reportCtx.paypalOriginal" from-field="reportImport.paypalOriginal"/>
            <set field="reportCtx.ebayFeeRmb" from-field="reportImport.ebayFeeRmb"/>
            <set field="reportCtx.ebayFeeOriginal" from-field="reportImport.ebayFeeOriginal"/>
            <set field="reportCtx.packaging" from-field="reportImport.packaging"/>
            <set field="reportCtx.totalCost" from-field="reportImport.totalCost"/>
            <set field="reportCtx.itemQty" from-field="reportImport.itemQty"/>
            <set field="reportCtx.orderQty" from-field="reportImport.orderQty"/>
            <set field="reportCtx.profit" from-field="reportImport.profit"/>
            <set field="reportCtx.profitPct" from-field="reportImport.profitPct"/>
            <set field="reportCtx.ownerGroup" from-field="reportImport.ownerGroup"/>
            <set field="reportCtx.duplicate" from-field="reportImport.duplicate"/>
            <set field="reportCtx.normalizeTotalSales" from-field="reportImport.normalizeTotalSales"/>
            <set field="reportCtx.normalizeProductCost" from-field="reportImport.normalizeProductCost"/>
            <set field="reportCtx.normalizeShippingCost" from-field="reportImport.normalizeShippingCost"/>
            <set field="reportCtx.normalizePaypal" from-field="reportImport.normalizePaypal"/>
            <set field="reportCtx.normalizeEbayFee" from-field="reportImport.normalizeEbayFee"/>
            <set field="reportCtx.normalizeTotalFee" from-field="reportImport.normalizeTotalFee"/>
            <set field="reportCtx.normalizeProfit" from-field="reportImport.normalizeProfit"/>
            
            <if-not-empty field="reportCheck">
                <set field="reportCheck.orderId" from-field="reportImport.orderId"/>
                <set field="reportCheck.platform" from-field="reportImport.platform"/>
                <set field="reportCheck.ownerGroup" from-field="reportImport.ownerGroup"/>
                <if-not-empty field="reportImport.orderDate"><set field="reportCheck.orderDate" from-field="reportImport.orderDate"/></if-not-empty>
                <if-not-empty field="reportImport.currencyRate"><set field="reportCheck.currencyRate" from-field="reportImport.currencyRate"/></if-not-empty>
                <if-not-empty field="reportImport.salesRmb"><set field="reportCheck.salesRmb" from-field="reportImport.salesRmb"/></if-not-empty>
                <if-not-empty field="reportImport.salesOriginal"><set field="reportCheck.salesOriginal" from-field="reportImport.salesOriginal"/></if-not-empty>
                <if-not-empty field="reportImport.shippingRmb"><set field="reportCheck.shippingRmb" from-field="reportImport.shippingRmb"/></if-not-empty>
                <if-not-empty field="reportImport.shippingOriginal"><set field="reportCheck.shippingOriginal" from-field="reportImport.shippingOriginal"/></if-not-empty>
                <if-not-empty field="reportImport.totalSales"><set field="reportCheck.totalSales" from-field="reportImport.totalSales"/></if-not-empty>
                <if-not-empty field="reportImport.productCost"><set field="reportCheck.productCost" from-field="reportImport.productCost"/></if-not-empty>
                <if-not-empty field="reportImport.shippingCost"><set field="reportCheck.shippingCost" from-field="reportImport.shippingCost"/></if-not-empty>
                <if-not-empty field="reportImport.paypalRmb"><set field="reportCheck.paypalRmb" from-field="reportImport.paypalRmb"/></if-not-empty>
                <if-not-empty field="reportImport.paypalOriginal"><set field="reportCheck.paypalOriginal" from-field="reportImport.paypalOriginal"/></if-not-empty>
                <if-not-empty field="reportImport.ebayFeeRmb"><set field="reportCheck.ebayFeeRmb" from-field="reportImport.ebayFeeRmb"/></if-not-empty>
                <if-not-empty field="reportImport.ebayFeeOriginal"><set field="reportCheck.ebayFeeOriginal" from-field="reportImport.ebayFeeOriginal"/></if-not-empty>
                <if-not-empty field="reportImport.packaging"><set field="reportCheck.packaging" from-field="reportImport.packaging"/></if-not-empty>
                <if-not-empty field="reportImport.totalCost"><set field="reportCheck.totalCost" from-field="reportImport.totalCost"/></if-not-empty>
                <if-not-empty field="reportImport.itemQty"><set field="reportCheck.itemQty" from-field="reportImport.itemQty"/></if-not-empty>
                <if-not-empty field="reportImport.orderQty"><set field="reportCheck.orderQty" from-field="reportImport.orderQty"/></if-not-empty>
                <if-not-empty field="reportImport.profit"><set field="reportCheck.profit" from-field="reportImport.profit"/></if-not-empty>
                <if-not-empty field="reportImport.profitPct"><set field="reportCheck.profitPct" from-field="reportImport.profitPct"/></if-not-empty>
                <if-not-empty field="reportImport.duplicate"><set field="reportCheck.duplicate" from-field="reportImport.duplicate"/></if-not-empty>
                <if-not-empty field="reportImport.normalizeTotalSales"><set field="reportCheck.normalizeTotalSales" from-field="reportImport.normalizeTotalSales"/></if-not-empty>
                <if-not-empty field="reportImport.normalizeProductCost"><set field="reportCheck.normalizeProductCost" from-field="reportImport.normalizeProductCost"/></if-not-empty>
                <if-not-empty field="reportImport.normalizeShippingCost"><set field="reportCheck.normalizeShippingCost" from-field="reportImport.normalizeShippingCost"/></if-not-empty>
                <if-not-empty field="reportImport.normalizePaypal"><set field="reportCheck.normalizePaypal" from-field="reportImport.normalizePaypal"/></if-not-empty>
                <if-not-empty field="reportImport.normalizeEbayFee"><set field="reportCheck.normalizeEbayFee" from-field="reportImport.normalizeEbayFee"/></if-not-empty>
                <if-not-empty field="reportImport.normalizeTotalFee"><set field="reportCheck.normalizeTotalFee" from-field="reportImport.normalizeTotalFee"/></if-not-empty>
                <if-not-empty field="reportImport.normalizeProfit"><set field="reportCheck.normalizeProfit" from-field="reportImport.normalizeProfit"/></if-not-empty>
                <store-value value-field="reportCheck"/>
                <else>
                    <call-service service-name="createReportGudao" in-map-name="reportCtx" include-user-login="true" break-on-error="false">
                        <!--<result-to-field result-name="resultProductId" field="productId"/>-->
                    </call-service>
                </else>
            </if-not-empty>
            
            <!--<log level="error" message="${errorMessageList}"/>-->
            <if-empty field="errorMessageList">
                <set field="reportImportValue.reportImportId" from-field="reportImport.reportImportId"/>
                <set field="reportImportValue.importedStatus" value="Y"/>
                <call-service service-name="updateReportImportGudao" in-map-name="reportImportValue"/>
                <else>
                    <set field="reportImportValue.reportImportId" from-field="reportImport.reportImportId"/>
                    <set field="reportImportValue.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                    <call-service service-name="updateReportImportGudao" in-map-name="reportImportValue"/>
                </else>
            </if-empty>
        </simple-method>    <!-- importNewProductFromCsv -->
        
        <simple-method method-name="createReportGudao" short-description="Create a Report">
            <make-value value-field="newEntity" entity-name="ReportProfit"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <create-value value-field="newEntity"/>
        </simple-method>
        
        <simple-method method-name="importNewReportForImportAndMessage" short-description="Import New Report For Import And Message" use-transaction="false">
            <if-not-empty field="parameters.importFormId">
                <field-to-result result-name="fileName" field="parameters.fileName"/>
                <field-to-result result-name="importFormId" field="parameters.importFormId"/>
                <if-not-empty field="parameters.reportImportId">
                    <set field="import.importFormId" from-field="parameters.importFormId"/>
                    <set field="import.reportImportId" from-field="parameters.reportImportId"/>
                    <call-service service-name="importNewReportFromCsvGudao" in-map-name="import" include-user-login="true" break-on-error="false">
                        <result-to-field result-name="errorMessageList"/>
                        <result-to-field result-name="responseMessage"/>
                    </call-service>
                    <if-empty field="errorMessageList">
                        <set field="reportImport.reportImportId" from-field="parameters.reportImportId"/>
                        <set field="reportImport.importedStatus" value="Y"/>
                        <set field="reportImport.importedDescription" value="Imported Successfully."/>
                        <call-service service-name="updateReportImportGudao" in-map-name="reportImport"  break-on-error="false"/>
                        <set field="showMsg" value="Imported [reportImportId : ${parameters.reportImportId}] Successful"/>
                        <field-to-list list="eventMessageList" field="showMsg"/>
                        <field-to-request field="eventMessageList"/>
                        <else>
                            <set field="reportImport.reportImportId" from-field="parameters.reportImportId"/>
                            <set field="reportImport.importedStatus" value="N"/>
                            <set field="reportImport.importedDescription" value="${groovy:org.ofbiz.orderimport.OrderImportServices.convertMessage(errorMessageList)}"/>
                            <call-service service-name="updateReportImportGudao" in-map-name="reportImport" break-on-error="false" include-user-login="true"/>
                            <field-to-request field="errorMessageList"/>
                            <return response-code="error"/>
                        </else>
                    </if-empty>
                </if-not-empty>
            </if-not-empty>
        </simple-method>    <!-- importNewReportForImportAndMessage -->
        
        <simple-method method-name="deleteReportImport" short-description="Delete ReportImport">
            <entity-one entity-name="ReportImport" value-field="reportImport" auto-field-map="true"/>
            <check-errors/>
            <remove-value value-field="reportImport"/>
            <check-errors/>
        </simple-method>    <!-- deleteProductImport -->
        <!-- Report - END -->
        
        <simple-method method-name="importMotherVersion" short-description="">
            <call-class-method class-name="org.ofbiz.content.layout.LayoutWorker"
            method-name="uploadImageAndParameters" ret-field="formInput">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
            <string value="uploadedFile"/>
            </call-class-method>
            <!--<set field="importFormId" from-field="formInput.formInput.importFormId"/>
             <field-to-request field="importFormId"/>
             <if-empty field="formInput.formInput.importFormId">
             <set field="showMsg" value="Please Choose Bulk Import Type"/>
             <field-to-list list="errorMessageList" field="showMsg"/>
             <field-to-request field="errorMessageList"/>
             <return response-code="error"/>
             </if-empty>-->
            <if-empty field="formInput.imageFileName">
                <set field="showMsg" value="No file to upload."/>
                <field-to-list list="errorMessageList" field="showMsg"/>
                <field-to-request field="errorMessageList"/>
                <return response-code="error"/>
            </if-empty>
            <set field="csvCtx.marketplace" from-field="formInput.formInput.marketplace"/>
            <set field="csvCtx.motherVersionType" from-field="formInput.formInput.motherVersionType"/>
            <set field="csvCtx.deleteData" from-field="formInput.formInput.deleteData"/>
            <set field="csvCtx.uploadedFile" from-field="formInput.imageData"/>
            <set field="csvCtx._uploadedFile_fileName" from-field="formInput.imageFileName"/>
            <!--<set field="csvCtx.importFormId" from-field="formInput.formInput.importFormId"/>-->
            <call-service service-name="importMotherVersion" in-map-name="csvCtx" include-user-login="true">
                <result-to-field result-name="errorMessageList"/>
            </call-service>
            <if-empty field="errorMessageList">
                <set field="showMsg" value="Uploaded Successful."/>
                <field-to-list list="eventMessageList" field="showMsg"/>
                <field-to-request field="eventMessageList"/>
            </if-empty>
        </simple-method>    <!-- importMotherVersion -->
        
        <simple-method method-name="createMotherVersion" short-description="Create Mother Version">
            <make-value value-field="newEntity" entity-name="MotherVersion"/>
            <if-empty field="_error_message_list_">
                <set-pk-fields map="parameters" value-field="newEntity"/>
                <set-nonpk-fields map="parameters" value-field="newEntity"/>
                <create-value value-field="newEntity"/>
                <check-errors error-code="error"/>
                <else>
                    <add-error error-list-name="errorMessageList">
                        <fail-message message="ERROR: ${_error_message_list_} on ${parameters.Id}"/>
                    </add-error>
                    <check-errors error-list-name="errorMessageList" error-code="error"/>
                </else>
            </if-empty>
        </simple-method> <!-- createMotherVersion -->
        
        <simple-method method-name="createMotherVersionResult" short-description="Create Mother Version Result">
            <make-value value-field="newEntity" entity-name="MotherVersionResult"/>
            <entity-one value-field="mv" entity-name="MotherVersionResult">
                <field-map field-name="marketplace" from-field="parameters.marketplace"/>
                <field-map field-name="account" from-field="parameters.account"/>
                <field-map field-name="id" from-field="parameters.id"/>
            </entity-one>
            <if-empty field="_error_message_list_">
                <set-pk-fields map="parameters" value-field="newEntity"/>
                <set-nonpk-fields map="parameters" value-field="newEntity"/>
                <if-empty field="mv">
                    <create-value value-field="newEntity"/>
                <else>
                    <store-value value-field="newEntity"/>
                </else>
                </if-empty>
                <check-errors error-code="error"/>
                <else>
                    <add-error error-list-name="errorMessageList">
                        <fail-message message="ERROR: ${_error_message_list_} on ${parameters.Id}"/>
                    </add-error>
                    <check-errors error-list-name="errorMessageList" error-code="error"/>
                </else>
            </if-empty>
        </simple-method> <!-- createMotherVersionResult -->
        
        <simple-method method-name="doUploadSalesXls" short-description=""><call-class-method class-name="org.ofbiz.content.layout.LayoutWorker"
            method-name="uploadImageAndParameters" ret-field="formInput">
            <field field="request" type="javax.servlet.http.HttpServletRequest"/>
            <string value="uploadedFile"/>
        </call-class-method>
        <set field="importFormId" from-field="formInput.formInput.importFormId"/>
        <field-to-request field="importFormId"/>
        <if-empty field="formInput.formInput.importFormId">
            <set field="showMsg" value="Please Choose Bulk Import Type"/>
            <field-to-list list="errorMessageList" field="showMsg"/>
            <field-to-request field="errorMessageList"/>
            <return response-code="error"/>
        </if-empty>
        <if-empty field="formInput.imageFileName">
            <set field="showMsg" value="No file to upload."/>
            <field-to-list list="errorMessageList" field="showMsg"/>
            <field-to-request field="errorMessageList"/>
            <return response-code="error"/>
        </if-empty>
        <set field="csvCtx.uploadedFile" from-field="formInput.imageData"/>
        <set field="csvCtx._uploadedFile_fileName" from-field="formInput.imageFileName"/>
        <set field="csvCtx.importFormId" from-field="formInput.formInput.importFormId"/>
        <call-service service-name="uploadSalesXlsGudao" in-map-name="csvCtx" include-user-login="true">
            <result-to-field result-name="errorMessageList"/>
        </call-service>
        <if-empty field="errorMessageList">
            <set field="showMsg" value="Uploaded Successful."/>
            <field-to-list list="eventMessageList" field="showMsg"/>
            <field-to-request field="eventMessageList"/>
        </if-empty>
        </simple-method>
        
        <simple-method method-name="createSalesImport" short-description="Create Product Import">
            <entity-one value-field="salesReportImport" entity-name="SalesReportImport">
                <field-map field-name="salesReportId" from-field="parameters.salesReportId"/>
            </entity-one>
            <if-not-empty field="salesReportImport">
                <set-pk-fields map="parameters" value-field="salesReportImport"/>
                <set-nonpk-fields map="parameters" value-field="salesReportImport"/>
                <store-value value-field="salesReportImport"/>
                <else>
                    <make-value value-field="newEntity" entity-name="SalesReportImport"/>
                    <set-pk-fields map="parameters" value-field="newEntity"/>
                    <set-nonpk-fields map="parameters" value-field="newEntity"/>
                    <create-value value-field="newEntity"/>
                </else>
            </if-not-empty>
            <!--<if-empty field="parameters.puyuanOrderId">
             <add-error error-list-name="_error_message_list_">
             <fail-message message="puyuanOrderId　不能为空 ${parameters.fileLineNumber}"/>
             </add-error>
             </if-empty>
             　　　<if-empty field="parameters.sellerName">
             <add-error error-list-name="_error_message_list_">
             <fail-message message="sellerName　不能为空 ${parameters.fileLineNumber}"/>
             </add-error>
             </if-empty>
             　　<if-empty field="parameters.transactionId">
             <add-error error-list-name="_error_message_list_">
             <fail-message message="transactionId　不能为空 ${parameters.fileLineNumber}"/>
             </add-error>
             </if-empty>
             <if-empty field="_error_message_list_">
             <set-pk-fields map="parameters" value-field="newEntity"/>
             <set-nonpk-fields map="parameters" value-field="newEntity"/>
             <create-value value-field="newEntity"/>
             <check-errors error-code="error"/>
             <else>
             <add-error error-list-name="errorMessageList">
             <fail-message message="ERROR: ${_error_message_list_} on ${parameters.productId}"/>
             </add-error>
             <check-errors error-list-name="errorMessageList" error-code="error"/>
             </else>
             </if-empty>-->
        </simple-method> <!-- createSalesImport -->
        
        <simple-method method-name="createWikiEntry" short-description="Create Wiki Entry">
            <make-value value-field="newEntity" entity-name="WikiEntry"/>
            <sequenced-id sequence-name="WikiEntry" field="newEntity.wikiId"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <set field="newEntity.sequence" from-field="parameters.sequence" type="Long"/>
            <create-value value-field="newEntity"/>
        </simple-method>
        
        <simple-method method-name="updateWikiEntry" short-description="Update Wiki Entry">
            <entity-one entity-name="WikiEntry" value-field="wikiEntry" auto-field-map="true"/>
            <check-errors/>
            <set-nonpk-fields map="parameters" value-field="wikiEntry"/>
            <set field="wikiEntry.sequence" from-field="parameters.sequence" type="Long"/>
            <store-value value-field="wikiEntry"/>
            <check-errors/>
        </simple-method>
        
        <simple-method method-name="deleteWikiEntry" short-description="Delete Wiki Entry">
            <entity-one value-field="wikiEntry" entity-name="WikiEntry">
                <field-map field-name="wikiId" from-field="parameters.wikiId"/>
            </entity-one>
            <check-errors/>
            <remove-value value-field="wikiEntry"/>
            <check-errors/>
        </simple-method>
        
        <!-- Rival Listing == START -->
        <simple-method method-name="updateRivalPriceMonitor" short-description="userLogin Detail data">
            <entity-one entity-name="UserLogin" value-field="userLoginGV">
                <field-map field-name="userLoginId" from-field="parameters.userLoginId"/>
            </entity-one>
            <check-errors/>
            <make-value value-field="newEntity" entity-name="ProductMonitoringList"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <set field="newEntity.itemId" value="NEW"/>
            <set field="newEntity.type" value="GUDAO"/>
            <set field="newEntity.platform" value="EBAY"/>
            <set field="newEntity.statusId" value="ACTIVE"/>
            <set field="newEntity.site" from-field="userLoginGV.externalAuthId"/>
            <create-value value-field="newEntity"/>
        </simple-method>
        
        <simple-method method-name="deleteMotherSku" short-description="Delete MotherSku">
            <entity-one entity-name="ProductMonitoringList" value-field="deleteData" auto-field-map="true"/>
            <check-errors/>
            <remove-value value-field="deleteData"/>
            <check-errors/>
        </simple-method>
        
        <simple-method method-name="updateAddRivalItemId" short-description="add rival itemId">
            <make-value value-field="newEntity" entity-name="ProductMonitoringList"/>
            <set-pk-fields map="parameters" value-field="newEntity"/>
            <set-nonpk-fields map="parameters" value-field="newEntity"/>
            <set field="newEntity.type" value="RIVAL"/>
            <set field="newEntity.platform" value="EBAY"/>
            <set field="newEntity.statusId" value="ACTIVE"/>
            <create-value value-field="newEntity"/>
            <check-errors/>
            <field-to-result result-name="itemId" field="parameters.itemId"/>
        </simple-method>
        
        <simple-method method-name="deleteRivalItemId" short-description="delete rival itemid">
            <entity-one entity-name="ProductMonitoringList" value-field="newEntity" auto-field-map="true"/>
            <check-errors/>
            <set-nonpk-fields map="parameters" value-field="newEntity" set-if-null="false"/>
            <set field="newEntity.type" value="RIVAL"/>
            <set field="newEntity.platform" value="EBAY"/>
            <set field="newEntity.statusId" value="DELETED"/>
            <store-value value-field="newEntity"/>
            <check-errors/>
        </simple-method>
        <!-- Rival Listing == END -->
        
        <simple-method method-name="updateMercuryItem" short-description="update Mercury Item">
            <entity-one entity-name="MercuryItem" value-field="lookedUpValue"/>
            <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
            <store-value value-field="lookedUpValue"/>
        </simple-method>

        <simple-method method-name="deleteReorderSku" short-description="delete Reorder Sku">
            <entity-one entity-name="ReorderInfo" value-field="newEntity" auto-field-map="true"/>
            <check-errors/>
            <set-nonpk-fields map="parameters" value-field="newEntity" set-if-null="false"/>
            <set field="newEntity.purchaseStatusId" value="DELETE"/>
            <store-value value-field="newEntity"/>
            <check-errors/>
        </simple-method>


</simple-methods>
